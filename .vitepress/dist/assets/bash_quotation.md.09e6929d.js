import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.681fc4ae.js";const h=JSON.parse('{"title":"引号和转义","description":"","frontmatter":{},"headers":[],"relativePath":"bash/quotation.md","filePath":"bash/quotation.md"}'),p={name:"bash/quotation.md"},o=l(`<h1 id="引号和转义" tabindex="-1">引号和转义 <a class="header-anchor" href="#引号和转义" aria-label="Permalink to &quot;引号和转义&quot;">​</a></h1><p>Bash 只有一种数据类型，就是字符串。不管用户输入什么数据，Bash 都视为字符串。因此，字符串相关的引号和转义，对 Bash 来说就非常重要。</p><h2 id="转义" tabindex="-1">转义 <a class="header-anchor" href="#转义" aria-label="Permalink to &quot;转义&quot;">​</a></h2><p>某些字符在 Bash 里面有特殊含义（比如<code>$</code>、<code>&amp;</code>、<code>*</code>）。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> $date</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">$</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> $date</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">$</span></span></code></pre></div><p>上面例子中，输出<code>$date</code>不会有任何结果，因为<code>$</code>是一个特殊字符。</p><p>如果想要原样输出这些特殊字符，就必须在它们前面加上反斜杠，使其变成普通字符。这就叫做“转义”（escape）。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\$</span><span style="color:#9ECBFF;">date</span></span>
<span class="line"><span style="color:#E1E4E8;">$date</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\$</span><span style="color:#032F62;">date</span></span>
<span class="line"><span style="color:#24292E;">$date</span></span></code></pre></div><p>上面命令中，只有在特殊字符<code>$</code>前面加反斜杠，才能原样输出。</p><p>反斜杠本身也是特殊字符，如果想要原样输出反斜杠，就需要对它自身转义，连续使用两个反斜线（<code>\\\\</code>）。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\\\</span></span>
<span class="line"><span style="color:#79B8FF;">\\</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\\\</span></span>
<span class="line"><span style="color:#005CC5;">\\</span></span></code></pre></div><p>上面例子输出了反斜杠本身。</p><p>反斜杠除了用于转义，还可以表示一些不可打印的字符。</p><ul><li><code>\\a</code>：响铃</li><li><code>\\b</code>：退格</li><li><code>\\n</code>：换行</li><li><code>\\r</code>：回车</li><li><code>\\t</code>：制表符</li></ul><p>如果想要在命令行使用这些不可打印的字符，可以把它们放在引号里面，然后使用<code>echo</code>命令的<code>-e</code>参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#79B8FF;">\\t</span><span style="color:#9ECBFF;">b</span></span>
<span class="line"><span style="color:#B392F0;">atb</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;a\\tb&quot;</span></span>
<span class="line"><span style="color:#B392F0;">a</span><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">b</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#005CC5;">\\t</span><span style="color:#032F62;">b</span></span>
<span class="line"><span style="color:#6F42C1;">atb</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;a\\tb&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">a</span><span style="color:#24292E;">        </span><span style="color:#032F62;">b</span></span></code></pre></div><p>上面例子中，命令行直接输出不可打印字符<code>\\t</code>，Bash 不能正确解释。必须把它们放在引号之中，然后使用<code>echo</code>命令的<code>-e</code>参数。</p><p>换行符是一个特殊字符，表示命令的结束，Bash 收到这个字符以后，就会对输入的命令进行解释执行。换行符前面加上反斜杠转义，就使得换行符变成一个普通字符，Bash 会将其当作长度为<code>0</code>的空字符处理，从而可以将一行命令写成多行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mv</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">/path/to/foo </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#E1E4E8;">/path/to/bar</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 等同于</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mv</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/path/to/foo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">/path/to/bar</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mv</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">/path/to/foo </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#24292E;">/path/to/bar</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 等同于</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mv</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/path/to/foo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">/path/to/bar</span></span></code></pre></div><p>上面例子中，如果一条命令过长，就可以在行尾使用反斜杠，将其改写成多行。这是常见的多行命令的写法。</p><h2 id="单引号" tabindex="-1">单引号 <a class="header-anchor" href="#单引号" aria-label="Permalink to &quot;单引号&quot;">​</a></h2><p>Bash 允许字符串放在单引号或双引号之中，加以引用。</p><p>单引号用于保留字符的字面含义，各种特殊字符在单引号里面，都会变为普通字符，比如星号（<code>*</code>）、美元符号（<code>$</code>）、反斜杠（<code>\\</code>）等。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;*&#39;</span></span>
<span class="line"><span style="color:#F97583;">*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$USER&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">$USER</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$((2+2))&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">$((</span><span style="color:#79B8FF;">2</span><span style="color:#F97583;">+</span><span style="color:#79B8FF;">2</span><span style="color:#9ECBFF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;$(echo foo)&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">$(</span><span style="color:#79B8FF;">echo</span><span style="color:#9ECBFF;"> foo)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;*&#39;</span></span>
<span class="line"><span style="color:#D73A49;">*</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$USER&#39;</span></span>
<span class="line"><span style="color:#24292E;">$USER</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$((2+2))&#39;</span></span>
<span class="line"><span style="color:#032F62;">$((</span><span style="color:#005CC5;">2</span><span style="color:#D73A49;">+</span><span style="color:#005CC5;">2</span><span style="color:#032F62;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;$(echo foo)&#39;</span></span>
<span class="line"><span style="color:#032F62;">$(</span><span style="color:#005CC5;">echo</span><span style="color:#032F62;"> foo)</span></span></code></pre></div><p>上面命令中，单引号使得 Bash 扩展、变量引用、算术运算和子命令，都失效了。如果不使用单引号，它们都会被 Bash 自动扩展。</p><p>由于反斜杠在单引号里面变成了普通字符，所以如果单引号之中，还要使用单引号，不能使用转义，需要在外层的单引号前面加上一个美元符号（<code>$</code>），然后再对里层的单引号转义。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 不正确</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">it&#39;s</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;"># 不正确</span></span>
<span class="line"><span style="color:#9ECBFF;">$ echo &#39;it</span><span style="color:#79B8FF;">\\&#39;</span><span style="color:#9ECBFF;">s&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;"># 正确</span></span>
<span class="line"><span style="color:#9ECBFF;">$ echo $&#39;it</span><span style="color:#79B8FF;">\\&#39;</span><span style="color:#9ECBFF;">s&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 不正确</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">it&#39;s</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;"># 不正确</span></span>
<span class="line"><span style="color:#032F62;">$ echo &#39;it</span><span style="color:#005CC5;">\\&#39;</span><span style="color:#032F62;">s&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;"># 正确</span></span>
<span class="line"><span style="color:#032F62;">$ echo $&#39;it</span><span style="color:#005CC5;">\\&#39;</span><span style="color:#032F62;">s&#39;</span></span></code></pre></div><p>不过，更合理的方法是改在双引号之中使用单引号。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;it&#39;s&quot;</span></span>
<span class="line"><span style="color:#B392F0;">it</span><span style="color:#B392F0;">&#39;s</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;it&#39;s&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">it</span><span style="color:#6F42C1;">&#39;s</span></span></code></pre></div><h2 id="双引号" tabindex="-1">双引号 <a class="header-anchor" href="#双引号" aria-label="Permalink to &quot;双引号&quot;">​</a></h2><p>双引号比单引号宽松，大部分特殊字符在双引号里面，都会失去特殊含义，变成普通字符。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;*&quot;</span></span>
<span class="line"><span style="color:#F97583;">*</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;*&quot;</span></span>
<span class="line"><span style="color:#D73A49;">*</span></span></code></pre></div><p>上面例子中，通配符<code>*</code>是一个特殊字符，放在双引号之中，就变成了普通字符，会原样输出。这一点需要特别留意，这意味着，双引号里面不会进行文件名扩展。</p><p>但是，三个特殊字符除外：美元符号（<code>$</code>）、反引号（<code>\`</code>）和反斜杠（<code>\\</code>）。这三个字符在双引号之中，依然有特殊含义，会被 Bash 自动扩展。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$SHELL</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#B392F0;">/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;\`</span><span style="color:#B392F0;">date</span><span style="color:#9ECBFF;">\`&quot;</span></span>
<span class="line"><span style="color:#B392F0;">Mon</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Jan</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">13</span><span style="color:#9ECBFF;">:33:18</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">CST</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2020</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$SHELL</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;\`</span><span style="color:#6F42C1;">date</span><span style="color:#032F62;">\`&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">Mon</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Jan</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">27</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">13</span><span style="color:#032F62;">:33:18</span><span style="color:#24292E;"> </span><span style="color:#032F62;">CST</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2020</span></span></code></pre></div><p>上面例子中，美元符号（<code>$</code>）和反引号（<code>\`</code>）在双引号中，都保持特殊含义。美元符号用来引用变量，反引号则是执行子命令。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;I&#39;d say: </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">hello!</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#B392F0;">I</span><span style="color:#B392F0;">&#39;d say: &quot;hello!&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">$ echo &quot;\\\\&quot;</span></span>
<span class="line"><span style="color:#B392F0;">\\</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;I&#39;d say: </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">hello!</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">I</span><span style="color:#6F42C1;">&#39;d say: &quot;hello!&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">$ echo &quot;\\\\&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">\\</span></span></code></pre></div><p>上面例子中，反斜杠在双引号之中保持特殊含义，用来转义。所以，可以使用反斜杠，在双引号之中插入双引号，或者插入反斜杠本身。</p><p>换行符在双引号之中，会失去特殊含义，Bash 不再将其解释为命令的结束，只是作为普通的换行符。所以可以利用双引号，在命令行输入多行文本。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;hello</span></span>
<span class="line"><span style="color:#9ECBFF;">world&quot;</span></span>
<span class="line"><span style="color:#B392F0;">hello</span></span>
<span class="line"><span style="color:#B392F0;">world</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;hello</span></span>
<span class="line"><span style="color:#032F62;">world&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">hello</span></span>
<span class="line"><span style="color:#6F42C1;">world</span></span></code></pre></div><p>上面命令中，Bash 正常情况下会将换行符解释为命令结束，但是换行符在双引号之中就失去了这种特殊作用，只用来换行，所以可以输入多行。<code>echo</code>命令会将换行符原样输出，显示的时候正常解释为换行。</p><p>双引号的另一个常见的使用场合是，文件名包含空格。这时就必须使用双引号（或单引号），将文件名放在里面。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ls</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;two words.txt&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ls</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;two words.txt&quot;</span></span></code></pre></div><p>上面命令中，<code>two words.txt</code>是一个包含空格的文件名，如果不放在双引号里面，就会被 Bash 当作两个文件。</p><p>双引号会原样保存多余的空格。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;this is a     test&quot;</span></span>
<span class="line"><span style="color:#B392F0;">this</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;">     </span><span style="color:#9ECBFF;">test</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;this is a     test&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">this</span><span style="color:#24292E;"> </span><span style="color:#032F62;">is</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;">     </span><span style="color:#032F62;">test</span></span></code></pre></div><p>双引号还有一个作用，就是保存原始命令的输出格式。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 单行输出</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">$(</span><span style="color:#B392F0;">cal</span><span style="color:#9ECBFF;">)</span></span>
<span class="line"><span style="color:#B392F0;">一月</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2020</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">日</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">一</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">二</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">三</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">四</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">五</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">六</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">...</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">31</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 原始格式输出</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;$(</span><span style="color:#B392F0;">cal</span><span style="color:#9ECBFF;">)&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">一月</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">2020</span></span>
<span class="line"><span style="color:#B392F0;">日</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">一</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">二</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">三</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">四</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">五</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">六</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">1</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">4</span></span>
<span class="line"><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">5</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">6</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">8</span><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">9</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">11</span></span>
<span class="line"><span style="color:#B392F0;">12</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">13</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">14</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">15</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">16</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">17</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">18</span></span>
<span class="line"><span style="color:#B392F0;">19</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">21</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">22</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">23</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">24</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">25</span></span>
<span class="line"><span style="color:#B392F0;">26</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">27</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">28</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">29</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">30</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">31</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 单行输出</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">$(</span><span style="color:#6F42C1;">cal</span><span style="color:#032F62;">)</span></span>
<span class="line"><span style="color:#6F42C1;">一月</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2020</span><span style="color:#24292E;"> </span><span style="color:#032F62;">日</span><span style="color:#24292E;"> </span><span style="color:#032F62;">一</span><span style="color:#24292E;"> </span><span style="color:#032F62;">二</span><span style="color:#24292E;"> </span><span style="color:#032F62;">三</span><span style="color:#24292E;"> </span><span style="color:#032F62;">四</span><span style="color:#24292E;"> </span><span style="color:#032F62;">五</span><span style="color:#24292E;"> </span><span style="color:#032F62;">六</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">...</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">31</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 原始格式输出</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;$(</span><span style="color:#6F42C1;">cal</span><span style="color:#032F62;">)&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">一月</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">2020</span></span>
<span class="line"><span style="color:#6F42C1;">日</span><span style="color:#24292E;"> </span><span style="color:#032F62;">一</span><span style="color:#24292E;"> </span><span style="color:#032F62;">二</span><span style="color:#24292E;"> </span><span style="color:#032F62;">三</span><span style="color:#24292E;"> </span><span style="color:#032F62;">四</span><span style="color:#24292E;"> </span><span style="color:#032F62;">五</span><span style="color:#24292E;"> </span><span style="color:#032F62;">六</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">1</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">4</span></span>
<span class="line"><span style="color:#24292E;"> </span><span style="color:#6F42C1;">5</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">6</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">8</span><span style="color:#24292E;">  </span><span style="color:#005CC5;">9</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">10</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">11</span></span>
<span class="line"><span style="color:#6F42C1;">12</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">13</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">14</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">15</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">16</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">17</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">18</span></span>
<span class="line"><span style="color:#6F42C1;">19</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">20</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">21</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">22</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">23</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">24</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">25</span></span>
<span class="line"><span style="color:#6F42C1;">26</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">27</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">28</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">29</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">30</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">31</span></span></code></pre></div><p>上面例子中，如果<code>$(cal)</code>不放在双引号之中，<code>echo</code>就会将所有结果以单行输出，丢弃了所有原始的格式。</p><h2 id="here-文档" tabindex="-1">Here 文档 <a class="header-anchor" href="#here-文档" aria-label="Permalink to &quot;Here 文档&quot;">​</a></h2><p>Here 文档（here document）是一种输入多行字符串的方法，格式如下。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">token</span></span>
<span class="line"><span style="color:#9ECBFF;">text</span></span>
<span class="line"><span style="color:#9ECBFF;">token</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">token</span></span>
<span class="line"><span style="color:#032F62;">text</span></span>
<span class="line"><span style="color:#032F62;">token</span></span></code></pre></div><p>它的格式分成开始标记（<code>&lt;&lt; token</code>）和结束标记（<code>token</code>）。开始标记是两个小于号 + Here 文档的名称，名称可以随意取，后面必须是一个换行符；结束标记是单独一行顶格写的 Here 文档名称，如果不是顶格，结束标记不起作用。两者之间就是多行字符串的内容。</p><p>下面是一个通过 Here 文档输出 HTML 代码的例子。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">_EOF_</span></span>
<span class="line"><span style="color:#9ECBFF;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">    &lt;title&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">    The title of your page</span></span>
<span class="line"><span style="color:#9ECBFF;">    &lt;/title&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">&lt;/head&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">    Your page content goes here.</span></span>
<span class="line"><span style="color:#9ECBFF;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">&lt;/html&gt;</span></span>
<span class="line"><span style="color:#9ECBFF;">_EOF_</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">_EOF_</span></span>
<span class="line"><span style="color:#032F62;">&lt;html&gt;</span></span>
<span class="line"><span style="color:#032F62;">&lt;head&gt;</span></span>
<span class="line"><span style="color:#032F62;">    &lt;title&gt;</span></span>
<span class="line"><span style="color:#032F62;">    The title of your page</span></span>
<span class="line"><span style="color:#032F62;">    &lt;/title&gt;</span></span>
<span class="line"><span style="color:#032F62;">&lt;/head&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&lt;body&gt;</span></span>
<span class="line"><span style="color:#032F62;">    Your page content goes here.</span></span>
<span class="line"><span style="color:#032F62;">&lt;/body&gt;</span></span>
<span class="line"><span style="color:#032F62;">&lt;/html&gt;</span></span>
<span class="line"><span style="color:#032F62;">_EOF_</span></span></code></pre></div><p>Here 文档内部会发生变量替换，同时支持反斜杠转义，但是不支持通配符扩展，双引号和单引号也失去语法作用，变成了普通字符。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">foo=&#39;hello world&#39;</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">_example_</span></span>
<span class="line"><span style="color:#E1E4E8;">$foo</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$foo</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">$foo</span><span style="color:#9ECBFF;">&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">_example_</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">hello</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">world</span></span>
<span class="line"><span style="color:#B392F0;">&quot;hello world&quot;</span></span>
<span class="line"><span style="color:#B392F0;">&#39;hello world&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">foo=&#39;hello world&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">_example_</span></span>
<span class="line"><span style="color:#24292E;">$foo</span></span>
<span class="line"><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$foo</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">$foo</span><span style="color:#032F62;">&#39;</span></span>
<span class="line"><span style="color:#032F62;">_example_</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">hello</span><span style="color:#24292E;"> </span><span style="color:#032F62;">world</span></span>
<span class="line"><span style="color:#6F42C1;">&quot;hello world&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">&#39;hello world&#39;</span></span></code></pre></div><p>上面例子中，变量<code>$foo</code>发生了替换，但是双引号和单引号都原样输出了，表明它们已经失去了引用的功能。</p><p>如果不希望发生变量替换，可以把 Here 文档的开始标记放在单引号之中。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">foo=&#39;hello world&#39;</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> &#39;</span><span style="color:#9ECBFF;">_example_</span><span style="color:#E1E4E8;">&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">$foo</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;$foo&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;$foo&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">_example_</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">$foo</span></span>
<span class="line"><span style="color:#B392F0;">&quot;</span><span style="color:#E1E4E8;">$foo</span><span style="color:#B392F0;">&quot;</span></span>
<span class="line"><span style="color:#B392F0;">&#39;$foo&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">foo=&#39;hello world&#39;</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> &#39;</span><span style="color:#032F62;">_example_</span><span style="color:#24292E;">&#39;</span></span>
<span class="line"><span style="color:#032F62;">$foo</span></span>
<span class="line"><span style="color:#032F62;">&quot;$foo&quot;</span></span>
<span class="line"><span style="color:#032F62;">&#39;$foo&#39;</span></span>
<span class="line"><span style="color:#032F62;">_example_</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">$foo</span></span>
<span class="line"><span style="color:#6F42C1;">&quot;</span><span style="color:#24292E;">$foo</span><span style="color:#6F42C1;">&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">&#39;$foo&#39;</span></span></code></pre></div><p>上面例子中，Here 文档的开始标记（<code>_example_</code>）放在单引号之中，导致变量替换失效了。</p><p>Here 文档的本质是重定向，它将字符串重定向输出给某个命令，相当于包含了<code>echo</code>命令。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">command</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">token</span></span>
<span class="line"><span style="color:#9ECBFF;">  string</span></span>
<span class="line"><span style="color:#9ECBFF;">token</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 等同于</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">command</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">command</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">token</span></span>
<span class="line"><span style="color:#032F62;">  string</span></span>
<span class="line"><span style="color:#032F62;">token</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># 等同于</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">command</span></span></code></pre></div><p>上面代码中，Here 文档相当于<code>echo</code>命令的重定向。</p><p>所以，Here 字符串只适合那些可以接受标准输入作为参数的命令，对于其他命令无效，比如<code>echo</code>命令就不能用 Here 文档作为参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">_example_</span></span>
<span class="line"><span style="color:#9ECBFF;">hello</span></span>
<span class="line"><span style="color:#9ECBFF;">_example_</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">_example_</span></span>
<span class="line"><span style="color:#032F62;">hello</span></span>
<span class="line"><span style="color:#032F62;">_example_</span></span></code></pre></div><p>上面例子不会有任何输出，因为 Here 文档对于<code>echo</code>命令无效。</p><p>此外，Here 文档也不能作为变量的值，只能用于命令的参数。</p><h2 id="here-字符串" tabindex="-1">Here 字符串 <a class="header-anchor" href="#here-字符串" aria-label="Permalink to &quot;Here 字符串&quot;">​</a></h2><p>Here 文档还有一个变体，叫做 Here 字符串（Here string），使用三个小于号（<code>&lt;&lt;&lt;</code>）表示。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">string</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">string</span></span></code></pre></div><p>它的作用是将字符串通过标准输入，传递给命令。</p><p>有些命令直接接受给定的参数，与通过标准输入接受参数，结果是不一样的。所以才有了这个语法，使得将字符串通过标准输入传递给命令更方便，比如<code>cat</code>命令只接受标准输入传入的字符串。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">cat</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;hi there&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 等同于</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;hi there&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cat</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">cat</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;hi there&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 等同于</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;hi there&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cat</span></span></code></pre></div><p>上面的第一种语法使用了 Here 字符串，要比第二种语法看上去语义更好，也更简洁。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">md5sum</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ddd&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 等同于</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ddd&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">md5sum</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">md5sum</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ddd&#39;</span></span>
<span class="line"><span style="color:#6A737D;"># 等同于</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ddd&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">md5sum</span></span></code></pre></div><p>上面例子中，<code>md5sum</code>命令只能接受标准输入作为参数，不能直接将字符串放在命令后面，会被当作文件名，即<code>md5sum ddd</code>里面的<code>ddd</code>会被解释成文件名。这时就可以用 Here 字符串，将字符串传给<code>md5sum</code>命令。</p>`,77),e=[o];function c(t,r,y,E,F,i){return a(),n("div",null,e)}const C=s(p,[["render",c]]);export{h as __pageData,C as default};
