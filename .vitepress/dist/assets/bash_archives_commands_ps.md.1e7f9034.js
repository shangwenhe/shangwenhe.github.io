import{_ as s,o as a,c as p,Q as e}from"./chunks/framework.681fc4ae.js";const _=JSON.parse('{"title":"ps","description":"","frontmatter":{},"headers":[],"relativePath":"bash/archives/commands/ps.md","filePath":"bash/archives/commands/ps.md"}'),o={name:"bash/archives/commands/ps.md"},n=e(`<h1 id="ps" tabindex="-1">ps <a class="header-anchor" href="#ps" aria-label="Permalink to &quot;ps&quot;">​</a></h1><p><code>ps</code>命令列出当前正在执行的进程信息。</p><p>由于进程很多，所以为了快速找到某个进程，一般与<code>grep</code>配合使用。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 找出正在运行 vim 的进程</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ps</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">grep</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 找出正在运行 vim 的进程</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ps</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">grep</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vi</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><p><code>-u</code>参数列出指定用户拥有的进程。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ps</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-u</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">yourusername</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ps</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-u</span><span style="color:#24292E;"> </span><span style="color:#032F62;">yourusername</span></span></code></pre></div>`,7),l=[n];function c(t,r,i,d,h,y){return a(),p("div",null,l)}const u=s(o,[["render",c]]);export{_ as __pageData,u as default};
