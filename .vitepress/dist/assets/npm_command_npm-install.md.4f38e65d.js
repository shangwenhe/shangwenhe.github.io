import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.681fc4ae.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"npm/command/npm-install.md","filePath":"npm/command/npm-install.md"}'),p={name:"npm/command/npm-install.md"},o=n(`<h2 id="概要" tabindex="-1">概要 <a class="header-anchor" href="#概要" aria-label="Permalink to &quot;概要&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> (with </span><span style="color:#9ECBFF;">no</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">args,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">package</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dir</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> [&lt;@scope&gt;/]</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> [&lt;@scope&gt;/]</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">tag</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> [&lt;@scope&gt;/]</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">version</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> [&lt;@scope&gt;/]</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">name</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">version range</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">alia</span><span style="color:#E1E4E8;">s</span><span style="color:#F97583;">&gt;</span><span style="color:#9ECBFF;">@npm:</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">nam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">git-hos</span><span style="color:#E1E4E8;">t</span><span style="color:#F97583;">&gt;</span><span style="color:#9ECBFF;">:</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">git-use</span><span style="color:#E1E4E8;">r</span><span style="color:#F97583;">&gt;</span><span style="color:#9ECBFF;">/</span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">repo-nam</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">repo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ur</span><span style="color:#E1E4E8;">l</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">tarball</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fil</span><span style="color:#E1E4E8;">e</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">tarball</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ur</span><span style="color:#E1E4E8;">l</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#9ECBFF;">folde</span><span style="color:#E1E4E8;">r</span><span style="color:#F97583;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">aliases:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">i,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">add</span></span>
<span class="line"><span style="color:#B392F0;">common</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">options:</span><span style="color:#E1E4E8;"> [-P</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">--save-prod</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">-D</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">--save-dev</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">-O</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">--save-optional</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">--save-peer]</span><span style="color:#E1E4E8;"> [-E</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">--save-exact]</span><span style="color:#E1E4E8;"> [-B</span><span style="color:#F97583;">|</span><span style="color:#B392F0;">--save-bundle]</span><span style="color:#E1E4E8;"> [--no-save] [--dry-run]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> (with </span><span style="color:#032F62;">no</span><span style="color:#24292E;"> </span><span style="color:#032F62;">args,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">in</span><span style="color:#24292E;"> </span><span style="color:#032F62;">package</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dir</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> [&lt;@scope&gt;/]</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> [&lt;@scope&gt;/]</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">@</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">tag</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> [&lt;@scope&gt;/]</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">@</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">version</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> [&lt;@scope&gt;/]</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">name</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">@</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">version range</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">alia</span><span style="color:#24292E;">s</span><span style="color:#D73A49;">&gt;</span><span style="color:#032F62;">@npm:</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">nam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">git-hos</span><span style="color:#24292E;">t</span><span style="color:#D73A49;">&gt;</span><span style="color:#032F62;">:</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">git-use</span><span style="color:#24292E;">r</span><span style="color:#D73A49;">&gt;</span><span style="color:#032F62;">/</span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">repo-nam</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">repo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ur</span><span style="color:#24292E;">l</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">tarball</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fil</span><span style="color:#24292E;">e</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">tarball</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ur</span><span style="color:#24292E;">l</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#032F62;">folde</span><span style="color:#24292E;">r</span><span style="color:#D73A49;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">aliases:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">i,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">add</span></span>
<span class="line"><span style="color:#6F42C1;">common</span><span style="color:#24292E;"> </span><span style="color:#032F62;">options:</span><span style="color:#24292E;"> [-P</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">--save-prod</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">-D</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">--save-dev</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">-O</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">--save-optional</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">--save-peer]</span><span style="color:#24292E;"> [-E</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">--save-exact]</span><span style="color:#24292E;"> [-B</span><span style="color:#D73A49;">|</span><span style="color:#6F42C1;">--save-bundle]</span><span style="color:#24292E;"> [--no-save] [--dry-run]</span></span></code></pre></div><h2 id="描述" tabindex="-1">描述 <a class="header-anchor" href="#描述" aria-label="Permalink to &quot;描述&quot;">​</a></h2><p>此命令安装一个包及其依赖的任何包。如果包具有package-lock、 npm shrinkwrap 文件或yarn lock 文件，则依赖项的安装将由其驱动，并遵循以下优先顺序：</p><ul><li><code>npm-shrinkwrap.json</code></li><li><code>package-lock.json</code></li><li><code>yarn.lock</code></li></ul><p>请参阅<a href="https://docs.npmjs.com/cli/v7/configuring-npm/package-lock-json" target="_blank" rel="noreferrer">package-lock.json</a>和<code>npm shrinkwrap</code>。</p><p>A<code>package</code>是：</p><ul><li><code>package.json</code> 包含由文件描述的程序的文件夹</li><li>b) 一个 gzip 压缩包，包含 (a)</li><li>c) 解析为 (b) 的 url</li><li>d)<code>&lt;name&gt;@&lt;version&gt;</code>在注册表中发布的 a（参见<code>registry</code></li><li>e) a <code>&lt;name&gt;@&lt;tag&gt;</code>（参见<code>npm dist-tag</code></li><li>f)<code>&lt;name&gt;</code>具有满足 (e) 的“最新”标签的a</li><li>g) a<code>&lt;git remote url&gt;</code>解析为 (a)</li></ul><p>即使您从未发布过您的包，如果您只想编写一个节点程序（a），并且也许您还希望在打包后能够轻松地将其安装在其他地方，那么您仍然可以从使用 npm 中获得很多好处进入 tarball (b)。</p><ul><li><p><code>npm install</code>（在包目录中，无参数）：</p><p>在本地<code>node_modules</code>文件夹中安装依赖项。</p><p>在全局模式下（即，使用<code>-g</code>或<code>--global</code>附加到命令），它将当前包上下文（即当前工作目录）安装为全局包。</p><p>默认情况下，<code>npm install</code>将安装 中作为依赖项列出的所有模块<code>package.json</code>。</p><p>使用该<code>--production</code>标志（或当<code>NODE_ENV</code>环境变量设置为<code>production</code>）时，npm 将不会安装 中列出的模块<code>devDependencies</code>。要安装两者中列出的所有模块，<code>dependencies</code>并且<code>devDependencies</code>当<code>NODE_ENV</code>环境变量设置为时<code>production</code>，您可以使用<code>--production=false</code>.</p><blockquote><p>注意：<code>--production</code>向项目添加依赖项时，该标志没有特殊含义。</p></blockquote></li><li><p><code>npm install &lt;folder&gt;</code>:</p><p>将包作为当前项目中的符号链接安装在目录中。它的依赖项将在链接之前安装。如果位于项目的根目录内，则其依赖项可能会像其他类型的依赖项一样<code>&lt;folder&gt;</code>提升到顶层。<code>node_modules</code></p></li><li><p><code>npm install &lt;tarball file&gt;</code>:</p><p>安装位于文件系统上的软件包。注意：如果您只想将 dev 目录链接到 npm 根目录，则可以使用<code>npm link</code>.</p><p>压缩包要求：</p><ul><li>文件名<em>必须</em>使用<code>.tar</code>、<code>.tar.gz</code>、 或<code>.tgz</code>作为扩展名。</li><li>包内容应位于 tarball 内的子文件夹中（通常称为<code>package/</code>）。npm 在安装包时剥离一层目录（相当于<code>tar x --strip-components=1</code>运行）。</li><li>该包必须包含<code>package.json</code>具有<code>name</code>和<code>version</code>属性的文件。</li></ul><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./package.tgz</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./package.tgz</span></span></code></pre></div></li><li><p><code>npm install &lt;tarball url&gt;</code>:</p><p>获取 tarball url，然后安装它。为了区分此选项和其他选项，参数必须以“http://”或“https://”开头</p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/indexzero/forever/tarball/v0.5.6</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/indexzero/forever/tarball/v0.5.6</span></span></code></pre></div></li><li><p><code>npm install [&lt;@scope&gt;/]&lt;name&gt;</code>:</p><p>进行<code>&lt;name&gt;@&lt;tag&gt;</code>安装，<code>&lt;tag&gt;</code>“标签”配置在哪里。（请参阅<code>config</code>。配置的默认值为<code>latest</code>。）</p><p><code>latest</code>在大多数情况下，这将安装npm 注册表上标记为 的模块版本。</p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sax</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sax</span></span></code></pre></div><p><code>npm install</code>默认情况下将任何指定的包保存到其中<code>dependencies</code>。此外，您可以使用一些附加标志来控制它们的保存位置和方式：</p><ul><li><code>-P, --save-prod</code>：包将出现在您的<code>dependencies</code>. 这是默认值，除非<code>-D</code>或<code>-O</code>存在。</li><li><code>-D, --save-dev</code>：包将出现在您的<code>devDependencies</code>.</li><li><code>-O, --save-optional</code>：包将出现在您的<code>optionalDependencies</code>.</li><li><code>--no-save</code>：防止保存到<code>dependencies</code>.</li></ul><p>当使用上述任何选项将依赖项保存到 package.json 时，有两个附加的可选标志：</p><ul><li><code>-E, --save-exact</code>：保存的依赖项将配置为精确的版本，而不是使用 npm 的默认 semver 范围运算符。</li><li><code>-B, --save-bundle</code>：保存的依赖项也会添加到您的<code>bundleDependencies</code>列表中。</li></ul><p>此外，如果您有<code>npm-shrinkwrap.json</code>或<code>package-lock.json</code>，那么它也会更新。</p><p><code>&lt;scope&gt;</code>是可选的。该软件包将从与指定范围关联的注册表中下载。如果没有注册表与给定范围关联，则假定为默认注册表。看<code>scope</code>。</p><p>注意：如果您的范围名称中不包含 @ 符号，npm 会将其解释为 GitHub 存储库，请参见下文。范围名称后面还必须跟有斜杠。</p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sax</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">githubname/reponame</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@myorg/privatepackage</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">node-tap</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--save-dev</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dtrace-provider</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--save-optional</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">readable-stream</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--save-exact</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">ansi-regex</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--save-bundle</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sax</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">githubname/reponame</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@myorg/privatepackage</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">node-tap</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-dev</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dtrace-provider</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-optional</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">readable-stream</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-exact</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">ansi-regex</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--save-bundle</span></span></code></pre></div><p><strong>注意</strong>：如果当前工作目录中有一个指定的文件或文件夹<code>&lt;name&gt;</code>，那么它将尝试安装该文件或文件夹，并且仅在无效时尝试按名称获取包。</p></li><li><p><code>npm install &lt;alias&gt;@npm:&lt;name&gt;</code>:</p><p>使用自定义别名安装包。允许并排使用同名包的多个版本，为具有较长包的包提供更方便的导入名称，并使用 git forks 替换或分叉 npm 包作为替换。别名仅适用于您的项目，不会重命名传递依赖项中的包。别名应遵循 中规定的命名约定<code>naming-rules</code>。</p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">my-react@npm:react</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">jquery2@npm:jquery@2</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">jquery3@npm:jquery@3</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">npa@npm:npm-package-arg</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">my-react@npm:react</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">jquery2@npm:jquery@2</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">jquery3@npm:jquery@3</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">npa@npm:npm-package-arg</span></span></code></pre></div></li><li><p><code>npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;tag&gt;</code>:</p><p>安装指定标签引用的包的版本。如果该包的注册表数据中不存在该标签，则此操作将失败。</p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sax@latest</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@myorg/mypackage@latest</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sax@latest</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@myorg/mypackage@latest</span></span></code></pre></div></li><li><p><code>npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version&gt;</code>:</p><p>安装指定版本的软件包。如果版本尚未发布到注册表，此操作将会失败。</p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sax@0.1.1</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@myorg/privatepackage@1.5.0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sax@0.1.1</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@myorg/privatepackage@1.5.0</span></span></code></pre></div></li><li><p><code>npm install [&lt;@scope&gt;/]&lt;name&gt;@&lt;version range&gt;</code>:</p><p>安装与指定版本范围匹配的软件包版本。这将遵循与 中描述的解决依赖关系相同的规则<code>package.json</code>。</p><p>请注意，大多数版本范围必须用引号引起来，以便您的 shell 将其视为单个参数。</p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sax@&quot;&gt;=0.1.0 &lt;0.2.0&quot;</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">@myorg/privatepackage@&quot;16 - 17&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sax@&quot;&gt;=0.1.0 &lt;0.2.0&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">@myorg/privatepackage@&quot;16 - 17&quot;</span></span></code></pre></div></li><li><p><code>npm install &lt;git remote url&gt;</code>:</p><p>从托管 git 提供商安装包，并使用<code>git</code>. 对于完整的 git 远程 url，只会尝试该 URL。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">protocol</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">://[</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">user</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">[:</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">password</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">]@]</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">hostname</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">[:</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">port</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">][:][/]</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">path</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">[#</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">commit-ish</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">#semver:&lt;semver&gt;]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">protocol</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">://[</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">user</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">[:</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">password</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">]@]</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">hostname</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">[:</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">port</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">][:][/]</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">path</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">[#</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">commit-ish</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">#semver:&lt;semver&gt;]</span></span></code></pre></div><p><code>&lt;protocol&gt;\`\`git</code>是、<code>git+ssh</code>、<code>git+http</code>、<code>git+https</code>、 或之一<code>git+file</code>。</p><p>如果<code>#&lt;commit-ish&gt;</code>提供，它将用于准确克隆该提交。如果 commit-ish 的格式为<code>#semver:&lt;semver&gt;</code>，<code>&lt;semver&gt;</code>可以是任何有效的 semver 范围或精确版本，npm 将在远程存储库中查找与该范围匹配的任何标签或引用，就像注册表依赖项一样。如果<code>#&lt;commit-ish&gt;</code>或均未<code>#semver:&lt;semver&gt;</code>指定，则使用存储库的默认分支。</p><p>如果存储库使用子模块，这些子模块也将被克隆。</p><p>如果正在安装的软件包包含<code>prepare</code>脚本，<code>dependencies</code>则<code>devDependencies</code>在打包和安装软件包之前，将安装该脚本，并运行准备脚本。</p><p>以下 git 环境变量可以被 npm 识别，并在运行 git 时添加到环境中：</p><ul><li><code>GIT_ASKPASS</code></li><li><code>GIT_EXEC_PATH</code></li><li><code>GIT_PROXY_COMMAND</code></li><li><code>GIT_SSH</code></li><li><code>GIT_SSH_COMMAND</code></li><li><code>GIT_SSL_CAINFO</code></li><li><code>GIT_SSL_NO_VERIFY</code></li></ul><p>有关详细信息，请参阅 git 手册页。</p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git+ssh://git@github.com:npm/cli.git#v1.0.27</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git+ssh://git@github.com:npm/cli#pull/273</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git+ssh://git@github.com:npm/cli#semver:^5.0</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git+https://isaacs@github.com/npm/cli.git</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git://github.com/npm/cli.git#v1.0.27</span></span>
<span class="line"><span style="color:#E1E4E8;">GIT_SSH_COMMAND</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;ssh -i ~/.ssh/custom_ident&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">git+ssh://git@github.com:npm/cli.git</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git+ssh://git@github.com:npm/cli.git#v1.0.27</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git+ssh://git@github.com:npm/cli#pull/273</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git+ssh://git@github.com:npm/cli#semver:^5.0</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git+https://isaacs@github.com/npm/cli.git</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git://github.com/npm/cli.git#v1.0.27</span></span>
<span class="line"><span style="color:#24292E;">GIT_SSH_COMMAND</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;ssh -i ~/.ssh/custom_ident&#39;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">git+ssh://git@github.com:npm/cli.git</span></span></code></pre></div></li><li><p><code>npm install &lt;githubname&gt;/&lt;githubrepo&gt;[#&lt;commit-ish&gt;]</code>:</p></li><li><p><code>npm install github:&lt;githubname&gt;/&lt;githubrepo&gt;[#&lt;commit-ish&gt;]</code>:</p><p><code>https://github.com/githubname/githubrepo</code>通过尝试使用克隆来安装包<code>git</code>。</p><p>如果<code>#&lt;commit-ish&gt;</code>提供，它将用于准确克隆该提交。如果 commit-ish 的格式为<code>#semver:&lt;semver&gt;</code>，<code>&lt;semver&gt;</code>可以是任何有效的 semver 范围或精确版本，npm 将在远程存储库中查找与该范围匹配的任何标签或引用，就像注册表依赖项一样。如果<code>#&lt;commit-ish&gt;</code>或均未<code>#semver:&lt;semver&gt;</code>指定，则<code>master</code>使用 then。</p><p>与常规 git 依赖项一样，如果包在安装完成之前有脚本，则将安装 和<code>dependencies</code>。<code>devDependencies\`\`prepare</code></p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mygithubuser/myproject</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">github:mygithubuser/myproject</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mygithubuser/myproject</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">github:mygithubuser/myproject</span></span></code></pre></div></li><li><p><code>npm install gist:[&lt;githubname&gt;/]&lt;gistID&gt;[#&lt;commit-ish&gt;|#semver:&lt;semver&gt;]</code>:</p><p><code>https://gist.github.com/gistID</code>通过尝试使用克隆来安装包<code>git</code>。与要点关联的 GitHub 用户名是可选的，并且不会保存在<code>package.json</code>.</p><p>与常规 git 依赖项一样，如果包在安装完成之前有脚本，则将安装 和<code>dependencies</code>。<code>devDependencies\`\`prepare</code></p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gist:101a11beef</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gist:101a11beef</span></span></code></pre></div></li><li><p><code>npm install bitbucket:&lt;bitbucketname&gt;/&lt;bitbucketrepo&gt;[#&lt;commit-ish&gt;]</code>:</p><p><code>https://bitbucket.org/bitbucketname/bitbucketrepo</code>通过尝试使用克隆来安装包<code>git</code>。</p><p>如果<code>#&lt;commit-ish&gt;</code>提供，它将用于准确克隆该提交。如果 commit-ish 的格式为<code>#semver:&lt;semver&gt;</code>，<code>&lt;semver&gt;</code>可以是任何有效的 semver 范围或精确版本，npm 将在远程存储库中查找与该范围匹配的任何标签或引用，就像注册表依赖项一样。如果<code>#&lt;commit-ish&gt;</code>或均未<code>#semver:&lt;semver&gt;</code>指定，则<code>master</code>使用 then。</p><p>与常规 git 依赖项一样，如果包在安装完成之前有脚本，则将安装 和<code>dependencies</code>。<code>devDependencies\`\`prepare</code></p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bitbucket:mybitbucketuser/myproject</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bitbucket:mybitbucketuser/myproject</span></span></code></pre></div></li><li><p><code>npm install gitlab:&lt;gitlabname&gt;/&lt;gitlabrepo&gt;[#&lt;commit-ish&gt;]</code>:</p><p><code>https://gitlab.com/gitlabname/gitlabrepo</code>通过尝试使用克隆来安装包<code>git</code>。</p><p>如果<code>#&lt;commit-ish&gt;</code>提供，它将用于准确克隆该提交。如果 commit-ish 的格式为<code>#semver:&lt;semver&gt;</code>，<code>&lt;semver&gt;</code>可以是任何有效的 semver 范围或精确版本，npm 将在远程存储库中查找与该范围匹配的任何标签或引用，就像注册表依赖项一样。如果<code>#&lt;commit-ish&gt;</code>或均未<code>#semver:&lt;semver&gt;</code>指定，则<code>master</code>使用 then。</p><p>与常规 git 依赖项一样，如果包在安装完成之前有脚本，则将安装 和<code>dependencies</code>。<code>devDependencies\`\`prepare</code></p><p>例子：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gitlab:mygitlabuser/myproject</span></span>
<span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gitlab:myusr/myproj#semver:^5.0</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gitlab:mygitlabuser/myproject</span></span>
<span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gitlab:myusr/myproj#semver:^5.0</span></span></code></pre></div></li></ul><p>您可以组合多个参数，甚至多种类型的参数。例如：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sax@&quot;&gt;=0.1.0 &lt;0.2.0&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bench</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">supervisor</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sax@&quot;&gt;=0.1.0 &lt;0.2.0&quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bench</span><span style="color:#24292E;"> </span><span style="color:#032F62;">supervisor</span></span></code></pre></div><p>该<code>--tag</code>参数将应用于所有指定的安装目标。如果存在给定名称的标记，则标记的版本优先于较新的版本。</p><p>该<code>--dry-run</code>参数将以通常的方式报告安装在没有实际安装任何东西的情况下会做什么。</p><p>该<code>--package-lock-only</code>参数只会更新<code>package-lock.json</code>, 而不会检查<code>node_modules</code>和下载依赖项。</p><p>or参数将强制 npm 获取远程资源，即使磁盘上存在本地副本也是如此<code>-f</code>。<code>--force</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">npm</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">sax</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--force</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">npm</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span><span style="color:#24292E;"> </span><span style="color:#032F62;">sax</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--force</span></span></code></pre></div><h2 id="configuration" tabindex="-1"><code>configuration</code> <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;\`configuration\`&quot;">​</a></h2><p>请参阅<code>config</code>帮助文档。许多配置参数对安装有一定影响，因为这是 npm 的大部分工作。</p><p>这些是与安装相关的一些最常见的选项。</p><h2 id="save" tabindex="-1"><code>save</code> <a class="header-anchor" href="#save" aria-label="Permalink to &quot;\`save\`&quot;">​</a></h2><ul><li>Default: true</li><li>Type: Boolean</li></ul><p>将已安装的包作为依赖项保存到 package.json 文件中。</p><p>与该<code>npm rm</code>命令一起使用时，从 package.json 中删除依赖项。</p><h2 id="save-exact" tabindex="-1"><code>save-exact</code> <a class="header-anchor" href="#save-exact" aria-label="Permalink to &quot;\`save-exact\`&quot;">​</a></h2><ul><li>Default: false</li><li>Type: Boolean</li></ul><p>保存到 package.json 的依赖项将使用精确的版本进行配置，而不是使用 npm 的默认 semver 范围运算符。</p><h2 id="global" tabindex="-1"><code>global</code> <a class="header-anchor" href="#global" aria-label="Permalink to &quot;\`global\`&quot;">​</a></h2><ul><li>Default: false</li><li>Type: Boolean</li></ul><p>在“全局”模式下运行，以便将包安装到该<code>prefix</code>文件夹而不是当前工作目录中。有关行为差异的更多信息，请参阅<a href="https://docs.npmjs.com/cli/v7/configuring-npm/folders" target="_blank" rel="noreferrer">文件夹。</a></p><ul><li>软件包将安装到该<code>{prefix}/lib/node_modules</code>文件夹中，而不是当前工作目录中。</li><li>bin 文件链接到<code>{prefix}/bin</code></li><li>手册页链接到<code>{prefix}/share/man</code></li></ul><h2 id="global-style" tabindex="-1"><code>global-style</code> <a class="header-anchor" href="#global-style" aria-label="Permalink to &quot;\`global-style\`&quot;">​</a></h2><ul><li>Default: false</li><li>Type: Boolean</li></ul><p>使 npm 将包安装到本地<code>node_modules</code>文件夹中，其布局与全局文件夹使用的布局相同<code>node_modules</code>。只有您的直接依赖项才会显示，<code>node_modules</code>并且它们依赖的所有内容都将在其<code>node_modules</code>文件夹中展平。这显然会消除一些重复数据删除。如果与 一起使用<code>legacy-bundling</code>，<code>legacy-bundling</code>将是首选。</p><h2 id="legacy-bundling" tabindex="-1"><code>legacy-bundling</code> <a class="header-anchor" href="#legacy-bundling" aria-label="Permalink to &quot;\`legacy-bundling\`&quot;">​</a></h2><ul><li>Default: false</li><li>Type: Boolean</li></ul><p>使 npm 安装该软件包，以便 1.4 之前的 npm 版本（例如 Node 0.8 中包含的版本）可以安装该软件包。这消除了所有自动重复数据删除。如果与<code>global-style</code>此选项一起使用将是首选。</p><h2 id="strict-peer-deps" tabindex="-1"><code>strict-peer-deps</code> <a class="header-anchor" href="#strict-peer-deps" aria-label="Permalink to &quot;\`strict-peer-deps\`&quot;">​</a></h2><ul><li>Default: false</li><li>Type: Boolean</li></ul><p>如果设置为<code>true</code>，并且<code>--legacy-peer-deps</code>未设置，则<em>任何</em>冲突<code>peerDependencies</code>都将被视为安装失败，即使 npm 可以根据非对等依赖关系合理猜测适当的解决方案。</p><p>默认情况下，<code>peerDependencies</code>依赖关系图中深层的冲突将使用最近的非对等依赖关系规范来解决，即使这样做会导致某些包接收超出其包<code>peerDependencies</code>对象中设置的范围的对等依赖关系。</p><p>当执行此类和覆盖时，会打印一条警告，解释冲突和涉及的包。如果<code>--strict-peer-deps</code>设置了，则此警告将被视为失败。</p><h2 id="package-lock" tabindex="-1"><code>package-lock</code> <a class="header-anchor" href="#package-lock" aria-label="Permalink to &quot;\`package-lock\`&quot;">​</a></h2><ul><li>Default: true</li><li>Type: Boolean</li></ul><p>如果设置为 false，则<code>package-lock.json</code>安装时忽略文件。这也会阻止<em>写入</em> <code>package-lock.json</code>if<code>save</code>为 true。</p><p>当包包锁被禁用时，无关模块的自动修剪也将被禁用。要删除禁用包锁的无关模块，请使用<code>npm prune</code>.</p><h2 id="omit" tabindex="-1"><code>omit</code> <a class="header-anchor" href="#omit" aria-label="Permalink to &quot;\`omit\`&quot;">​</a></h2><ul><li>默认值：如果<code>NODE_ENV</code>环境变量设置为“生产”，则为“dev”，否则为空。</li><li>类型：“dev”、“可选”或“peer”（可以设置多次）</li></ul><p>要从磁盘上的安装树中省略的依赖项类型。</p><p>请注意，这些依赖项<em>仍会被</em>解析并添加到<code>package-lock.json</code>或<code>npm-shrinkwrap.json</code>文件中。它们只是没有物理安装在磁盘上。</p><p>如果包类型同时出现在<code>--include</code>和<code>--omit</code>列表中，那么它将被包含在内。</p><p>如果生成的省略列表包含<code>&#39;dev&#39;</code>，则所有生命周期脚本的<code>NODE_ENV</code>环境变量将设置为。<code>&#39;production&#39;</code></p><h2 id="ignore-scripts" tabindex="-1"><code>ignore-scripts</code> <a class="header-anchor" href="#ignore-scripts" aria-label="Permalink to &quot;\`ignore-scripts\`&quot;">​</a></h2><ul><li>默认值：假</li><li>类型：布尔值</li></ul><p>如果为 true，npm 不会运行 package.json 文件中指定的脚本。</p><p>请注意，明确旨在运行特定脚本的命令，例如<code>npm start</code>、<code>npm stop</code>、<code>npm restart</code>、<code>npm test</code>、 和如果设置了，<code>npm run-script</code>仍将运行其预期脚本，但它们<em>不会</em>运行任何前置或后置脚本。<code>ignore-scripts</code></p><h2 id="audit" tabindex="-1"><code>audit</code> <a class="header-anchor" href="#audit" aria-label="Permalink to &quot;\`audit\`&quot;">​</a></h2><ul><li>默认值：true</li><li>类型：布尔值</li></ul><p>当“true”时，将审核报告与当前 npm 命令一起提交到默认注册表和为范围配置的所有注册表。<code>npm audit</code>有关提交内容的详细信息，请参阅文档。</p><h2 id="bin-links" tabindex="-1"><code>bin-links</code> <a class="header-anchor" href="#bin-links" aria-label="Permalink to &quot;\`bin-links\`&quot;">​</a></h2><ul><li>默认值：true</li><li>类型：布尔值</li></ul><p>告诉 npm 为包可执行文件创建符号链接（或<code>.cmd</code>Windows 上的垫片）。</p><p>设置为 false 以使其不执行此操作。这可以用来解决某些文件系统不支持符号链接的问题，即使在表面上的 Unix 系统上也是如此。</p><h2 id="fund" tabindex="-1"><code>fund</code> <a class="header-anchor" href="#fund" aria-label="Permalink to &quot;\`fund\`&quot;">​</a></h2><ul><li>默认值：true</li><li>类型：布尔值</li></ul><p>当“true”时，会在每个消息末尾显示消息<code>npm install</code>，确认寻求资金的依赖项的数量。<code>npm fund</code>详情请参阅。</p><h2 id="dry-run" tabindex="-1"><code>dry-run</code> <a class="header-anchor" href="#dry-run" aria-label="Permalink to &quot;\`dry-run\`&quot;">​</a></h2><ul><li>默认值：假</li><li>类型：布尔值</li></ul><p>表示您不希望 npm 进行任何更改，并且它应该只报告它会执行的操作。这可以传递到任何修改本地安装的命令中，例如<code>install</code>、<code>update</code>、<code>dedupe</code>、<code>uninstall</code>以及<code>pack</code>和<code>publish</code>。</p><p>注意：其他网络相关命令不支持这一点，例如<code>dist-tags</code>、<code>owner</code>等。</p><h2 id="workspace" tabindex="-1"><code>workspace</code> <a class="header-anchor" href="#workspace" aria-label="Permalink to &quot;\`workspace\`&quot;">​</a></h2><ul><li>默认：</li><li>类型：String（可设置多次）</li></ul><p>允许在当前项目的已配置工作区上下文中运行命令，同时通过仅运行此配置选项定义的工作区进行过滤。</p><p>配置的有效值为<code>workspace</code>：</p><ul><li>工作区名称</li><li>工作区目录的路径</li><li>父工作区目录的路径（将导致选择所有嵌套工作区）</li></ul><p>当设置该<code>npm init</code>命令时，可以将其设置为尚不存在的工作空间的文件夹，以创建该文件夹并将其设置为项目中的全新工作空间。</p><p>该值不会导出到子进程的环境中。</p><h2 id="workspaces" tabindex="-1"><code>workspaces</code> <a class="header-anchor" href="#workspaces" aria-label="Permalink to &quot;\`workspaces\`&quot;">​</a></h2><ul><li>默认值：假</li><li>类型：布尔值</li></ul><p><strong>允许在所有</strong>已配置工作区的上下文中运行命令。</p><p>该值不会导出到子进程的环境中。</p><h2 id="algorithm" tabindex="-1"><code>algorithm</code> <a class="header-anchor" href="#algorithm" aria-label="Permalink to &quot;\`algorithm\`&quot;">​</a></h2><p>给定一个<code>package{dep}</code>结构：<code>A{B,C}, B{C}, C{D}</code>， npm install 算法会生成：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">A</span></span>
<span class="line"><span style="color:#B392F0;">+--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">B</span></span>
<span class="line"><span style="color:#B392F0;">+--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">C</span></span>
<span class="line"><span style="color:#B392F0;">+--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">D</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">A</span></span>
<span class="line"><span style="color:#6F42C1;">+--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">B</span></span>
<span class="line"><span style="color:#6F42C1;">+--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">C</span></span>
<span class="line"><span style="color:#6F42C1;">+--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">D</span></span></code></pre></div><p>也就是说，从 B 到 C 的依赖性是通过 A 已经导致 C 在更高级别安装的事实来满足的。D 仍然安装在顶层，因为与它没有任何冲突。</p><p>对于<code>A{B,C}, B{C,D@1}, C{D@2}</code>，该算法产生：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">A</span></span>
<span class="line"><span style="color:#B392F0;">+--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">B</span></span>
<span class="line"><span style="color:#B392F0;">+--</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">C</span></span>
<span class="line"><span style="color:#E1E4E8;">   </span><span style="color:#9ECBFF;">\`</span><span style="color:#B392F0;">--D@2</span></span>
<span class="line"><span style="color:#B392F0;">+--</span><span style="color:#9ECBFF;"> D@1</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">A</span></span>
<span class="line"><span style="color:#6F42C1;">+--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">B</span></span>
<span class="line"><span style="color:#6F42C1;">+--</span><span style="color:#24292E;"> </span><span style="color:#032F62;">C</span></span>
<span class="line"><span style="color:#24292E;">   </span><span style="color:#032F62;">\`</span><span style="color:#6F42C1;">--D@2</span></span>
<span class="line"><span style="color:#6F42C1;">+--</span><span style="color:#032F62;"> D@1</span></span></code></pre></div><p>因为B的D@1将安装在顶层，所以C现在必须为自己私人安装D@2。该算法是确定性的，但如果请求以不同的顺序安装两个依赖项，则可能会生成不同的树。</p><p>有关 npm 创建的特定文件夹结构的更详细说明，请参阅<a href="https://docs.npmjs.com/cli/v7/configuring-npm/folders" target="_blank" rel="noreferrer">文件夹。</a></p>`,89),e=[o];function t(c,r,i,y,d,E){return a(),l("div",null,e)}const m=s(p,[["render",t]]);export{g as __pageData,m as default};
