import{_ as t,o,c as n,Q as s}from"./chunks/framework.681fc4ae.js";const m=JSON.parse('{"title":"<button> 元素","description":"","frontmatter":{},"headers":[],"relativePath":"js/elements/button.md","filePath":"js/elements/button.md"}'),e={name:"js/elements/button.md"},l=s(`<h1 id="button-元素" tabindex="-1"><code>&lt;button&gt;</code> 元素 <a class="header-anchor" href="#button-元素" aria-label="Permalink to &quot;\`&lt;button&gt;\` 元素&quot;">​</a></h1><p><code>&lt;button&gt;</code>元素继承了<code>HTMLButtonElement</code>接口。它有以下的实例属性。</p><p><strong>（1）HTMLButtonElement.accessKey</strong></p><p><code>HTMLButtonElement.accessKey</code>属性返回一个字符串，表示键盘上对应的键，通过<code>Alt + 这个键</code>可以让按钮获得焦点。该属性可读写。</p><p><strong>（2）HTMLButtonElement.autofocus</strong></p><p><code>HTMLButtonElement.autofocus</code>属性是一个布尔值，表示页面加载过程中，按钮是否会自动获得焦点。该属性可读写。</p><p><strong>（3）HTMLButtonElement.disabled</strong></p><p><code>HTMLButtonElement.disabled</code>属性是一个布尔值，表示该按钮是否禁止点击。该属性可读写。</p><p><strong>（4）HTMLButtonElement.form</strong></p><p><code>HTMLButtonElement.form</code>属性是一个表单元素，返回该按钮所在的表单。该属性只读。如果按钮不属于任何表单，该属性返回<code>null</code>。</p><p><strong>（5）HTMLButtonElement.formAction</strong></p><p><code>HTMLButtonElement.formAction</code>返回一个字符串，表示表单提交的 URL。该属性可读写，一旦设置了值，点击按钮就会提交到该属性指定的 URL，而不是<code>&lt;form&gt;</code>元素指定的 URL。</p><p><strong>（6）HTMLButtonElement.formEnctype</strong></p><p><code>HTMLButtonElement.formEnctype</code>属性是一个字符串，表示数据提交到服务器的编码类型。该属性可读写，一旦设置了值，点击按钮会按照该属性指定的编码方式，而不是<code>&lt;form&gt;</code>元素指定的编码方式。</p><p>该属性可以取以下的值。</p><ul><li><code>application/x-www-form-urlencoded</code>（默认值）</li><li><code>multipart/form-data</code>（上传文件的编码方式）</li><li><code>text/plain</code></li></ul><p><strong>（7）HTMLButtonElement.formMethod</strong></p><p><code>HTMLButtonElement.formMethod</code>属性是一个字符串，表示浏览器提交表单的 HTTP 方法。该属性可读写，一旦设置了值，点击后就会采用该属性指定的 HTTP 方法，而不是<code>&lt;form&gt;</code>元素指定的编码方法。</p><p><strong>（8）HTMLButtonElement.formNoValidate</strong></p><p><code>HTMLButtonElement.formNoValidate</code>属性是一个布尔值，表示点击按钮提交表单时，是否要跳过表单校验的步骤。该属性可读写，一旦设置会覆盖<code>&lt;form&gt;</code>元素的<code>novalidate</code>属性。</p><p><strong>（9）HTMLButtonElement.formTarget</strong></p><p><code>HTMLButtonElement.formTarget</code>属性是一个字符串，指定了提交了表单以后，哪个窗口展示服务器返回的内容。该属性可读写，一旦设置会覆盖<code>&lt;form&gt;</code>元素的<code>target</code>属性。</p><p><strong>（10）HTMLButtonElement.labels</strong></p><p><code>HTMLButtonElement.labels</code>返回<code>NodeList</code>实例，表示那些绑定按钮的<code>&lt;label&gt;</code>元素。该属性只读。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/* HTML 代码如下</span></span>
<span class="line"><span style="color:#6A737D;">  &lt;label id=&quot;label1&quot; for=&quot;test&quot;&gt;Label 1&lt;/label&gt;</span></span>
<span class="line"><span style="color:#6A737D;">  &lt;button id=&quot;test&quot;&gt;Button&lt;/button&gt;</span></span>
<span class="line"><span style="color:#6A737D;">  &lt;label id=&quot;label2&quot; for=&quot;test&quot;&gt;Label 2&lt;/label&gt;</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">button</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;test&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> i </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">; i </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> button.labels.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;">; i</span><span style="color:#F97583;">++</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(button.labels[i].textContent);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Label 1&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Label 2&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/* HTML 代码如下</span></span>
<span class="line"><span style="color:#6A737D;">  &lt;label id=&quot;label1&quot; for=&quot;test&quot;&gt;Label 1&lt;/label&gt;</span></span>
<span class="line"><span style="color:#6A737D;">  &lt;button id=&quot;test&quot;&gt;Button&lt;/button&gt;</span></span>
<span class="line"><span style="color:#6A737D;">  &lt;label id=&quot;label2&quot; for=&quot;test&quot;&gt;Label 2&lt;/label&gt;</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">button</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;test&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> i </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">; i </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> button.labels.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;">; i</span><span style="color:#D73A49;">++</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(button.labels[i].textContent);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Label 1&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Label 2&quot;</span></span></code></pre></div><p>上面代码中，两个<code>&lt;label&gt;</code>元素绑定<code>&lt;button&gt;</code>元素。<code>button.labels</code>返回这两个<code>&lt;label&gt;</code>元素。</p><p><strong>（11）HTMLButtonElement.name</strong></p><p><code>HTMLButtonElement.name</code>属性是一个字符串，表示按钮元素的<code>name</code>属性。如果没有设置<code>name</code>属性，则返回空字符串。该属性可读写。</p><p><strong>（12）HTMLButtonElement.tabIndex</strong></p><p><code>HTMLButtonElement.tabIndex</code>是一个整数，代表按钮元素的 Tab 键顺序。该属性可读写。</p><p><strong>（13）HTMLButtonElement.type</strong></p><p><code>HTMLButtonElement.type</code>属性是一个字符串，表示按钮的行为。该属性可读写，可能取以下的值。</p><ul><li><code>submit</code>：默认值，表示提交表单。</li><li><code>reset</code>：重置表单。</li><li><code>button</code>：没有任何默认行为。</li></ul><p><strong>（14）HTMLButtonElement.validationMessage</strong></p><p><code>HTMLButtonElement.validationMessage</code>属性是一个字符串，表示没有通过校验时显示的提示信息。该属性只读。</p><p><strong>（15）HTMLButtonElement.validity</strong></p><p><code>HTMLButtonElement.validity</code>属性返回该按钮的校验状态（<code>ValidityState</code>）。该属性只读。</p><p><strong>（16）HTMLButtonElement.value</strong></p><p><code>HTMLButtonElement.value</code>属性返回该按钮绑定的值。该属性可读写。</p><p><strong>（17）HTMLButtonElement.willValidate</strong></p><p><code>HTMLButtonElement.willValidate</code>属性是一个布尔值，表示该按钮提交表单时是否将被校验，默认为<code>false</code>。该属性只读。</p>`,41),a=[l];function p(c,r,d,u,i,E){return o(),n("div",null,a)}const g=t(e,[["render",p]]);export{m as __pageData,g as default};
