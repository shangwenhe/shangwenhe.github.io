import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.681fc4ae.js";const g=JSON.parse('{"title":"<img> 元素","description":"","frontmatter":{},"headers":[],"relativePath":"js/elements/image.md","filePath":"js/elements/image.md"}'),l={name:"js/elements/image.md"},p=e(`<h1 id="img-元素" tabindex="-1"><code>&lt;img&gt;</code> 元素 <a class="header-anchor" href="#img-元素" aria-label="Permalink to &quot;\`&lt;img&gt;\` 元素&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p><code>&lt;img&gt;</code>元素用于插入图片，主要继承了 HTMLImageElement 接口。</p><p>浏览器提供一个原生构造函数<code>Image</code>，用于生成<code>HTMLImageElement</code>实例。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Image</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">img </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Image</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">img </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HTMLImageElement</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Image</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">img </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Image</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">img </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLImageElement</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// true</span></span></code></pre></div><p><code>Image</code>构造函数可以接受两个整数作为参数，分别表示<code>&lt;img&gt;</code>元素的宽度和高度。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// 语法</span></span>
<span class="line"><span style="color:#B392F0;">Image</span><span style="color:#E1E4E8;">(width, height)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 用法</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> myImage </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Image</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// 语法</span></span>
<span class="line"><span style="color:#6F42C1;">Image</span><span style="color:#24292E;">(width, height)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 用法</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> myImage </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Image</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">);</span></span></code></pre></div><p><code>&lt;img&gt;</code>实例的<code>src</code>属性可以定义图像的网址。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Image</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">img.src </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;picture.jpg&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Image</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">img.src </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;picture.jpg&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>新生成的<code>&lt;img&gt;</code>实例并不属于文档的一部分。如果想让它显示在文档中，必须手动插入文档。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Image</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">img.src </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;image1.png&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">document.body.</span><span style="color:#B392F0;">appendChild</span><span style="color:#E1E4E8;">(img);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Image</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">img.src </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;image1.png&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">document.body.</span><span style="color:#6F42C1;">appendChild</span><span style="color:#24292E;">(img);</span></span></code></pre></div><p>除了使用<code>Image</code>构造，下面的方法也可以得到<code>HTMLImageElement</code>实例。</p><ul><li><code>document.images</code>的成员</li><li>节点选取方法（比如<code>document.getElementById</code>）得到的<code>&lt;img&gt;</code>节点</li><li><code>document.createElement(&#39;img&#39;)</code>生成的<code>&lt;img&gt;</code>节点</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">document.images[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HTMLImageElement</span></span>
<span class="line"><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;myImg&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">img </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HTMLImageElement</span></span>
<span class="line"><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">createElement</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;img&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">img </span><span style="color:#F97583;">instanceof</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">HTMLImageElement</span></span>
<span class="line"><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">document.images[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLImageElement</span></span>
<span class="line"><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;myImg&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">img </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLImageElement</span></span>
<span class="line"><span style="color:#6A737D;">// true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">createElement</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;img&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">img </span><span style="color:#D73A49;">instanceof</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">HTMLImageElement</span></span>
<span class="line"><span style="color:#6A737D;">// true</span></span></code></pre></div><p><code>HTMLImageElement</code>实例除了具有 Node、Element、HTMLElement 接口以外，还拥有一些独有的属性。这个接口没有定义自己的方法。</p><h2 id="特性相关的属性" tabindex="-1">特性相关的属性 <a class="header-anchor" href="#特性相关的属性" aria-label="Permalink to &quot;特性相关的属性&quot;">​</a></h2><p><strong>（1）HTMLImageElement.src</strong></p><p><code>HTMLImageElement.src</code>属性返回图像的完整网址。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// HTML 代码如下</span></span>
<span class="line"><span style="color:#6A737D;">// &lt;img width=&quot;300&quot; height=&quot;400&quot; id=&quot;myImg&quot; src=&quot;http://example.com/pic.jpg&quot;&gt;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;img&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">img.src </span><span style="color:#6A737D;">// http://example.com/pic.jpg</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// HTML 代码如下</span></span>
<span class="line"><span style="color:#6A737D;">// &lt;img width=&quot;300&quot; height=&quot;400&quot; id=&quot;myImg&quot; src=&quot;http://example.com/pic.jpg&quot;&gt;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;img&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">img.src </span><span style="color:#6A737D;">// http://example.com/pic.jpg</span></span></code></pre></div><p><strong>（2）HTMLImageElement.currentSrc</strong></p><p><code>HTMLImageElement.currentSrc</code>属性返回当前正在展示的图像的网址。JavaScript 和 CSS 的 mediaQuery 都可能改变正在展示的图像。</p><p><strong>（3）HTMLImageElement.alt</strong></p><p><code>HTMLImageElement.alt</code>属性可以读写<code>&lt;img&gt;</code>的 HTML 属性<code>alt</code>，表示对图片的文字说明。</p><p><strong>（4）HTMLImageElement.isMap，HTMLImageElement.useMap</strong></p><p><code>HTMLImageElement.isMap</code>属性对应<code>&lt;img&gt;</code>元素的 HTML 属性<code>ismap</code>，返回一个布尔值，表示图像是否为服务器端的图像映射的一部分。</p><p><code>HTMLImageElement.useMap</code>属性对应<code>&lt;img&gt;</code>元素的 HTML 属性<code>usemap</code>，表示当前图像对应的<code>&lt;map&gt;</code>元素。</p><p><strong>（5）HTMLImageElement.srcset，HTMLImageElement.sizes</strong></p><p><code>HTMLImageElement.srcset</code>属性和<code>HTMLImageElement.sizes</code>属性，分别用于读写<code>&lt;img&gt;</code>元素的<code>srcset</code>属性和<code>sizes</code>属性。它们用于<code>&lt;img&gt;</code>元素的响应式加载。<code>srcset</code>属性可以单独使用，但是<code>sizes</code>属性必须与<code>srcset</code>属性同时使用。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// HTML 代码如下</span></span>
<span class="line"><span style="color:#6A737D;">// &lt;img srcset=&quot;example-320w.jpg 320w,</span></span>
<span class="line"><span style="color:#6A737D;">//              example-480w.jpg 480w,</span></span>
<span class="line"><span style="color:#6A737D;">//              example-800w.jpg 800w&quot;</span></span>
<span class="line"><span style="color:#6A737D;">//      sizes=&quot;(max-width: 320px) 280px,</span></span>
<span class="line"><span style="color:#6A737D;">//             (max-width: 480px) 440px,</span></span>
<span class="line"><span style="color:#6A737D;">//             800px&quot;</span></span>
<span class="line"><span style="color:#6A737D;">//      id=&quot;myImg&quot;</span></span>
<span class="line"><span style="color:#6A737D;">//      src=&quot;example-800w.jpg&quot;&gt;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;myImg&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">img.srcset</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;example-320w.jpg 320w,</span></span>
<span class="line"><span style="color:#6A737D;">//  example-480w.jpg 480w,</span></span>
<span class="line"><span style="color:#6A737D;">//  example-800w.jpg 800w&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">img.sizes</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;(max-width: 320px) 280px,</span></span>
<span class="line"><span style="color:#6A737D;">//  (max-width: 480px) 440px,</span></span>
<span class="line"><span style="color:#6A737D;">//  800px&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// HTML 代码如下</span></span>
<span class="line"><span style="color:#6A737D;">// &lt;img srcset=&quot;example-320w.jpg 320w,</span></span>
<span class="line"><span style="color:#6A737D;">//              example-480w.jpg 480w,</span></span>
<span class="line"><span style="color:#6A737D;">//              example-800w.jpg 800w&quot;</span></span>
<span class="line"><span style="color:#6A737D;">//      sizes=&quot;(max-width: 320px) 280px,</span></span>
<span class="line"><span style="color:#6A737D;">//             (max-width: 480px) 440px,</span></span>
<span class="line"><span style="color:#6A737D;">//             800px&quot;</span></span>
<span class="line"><span style="color:#6A737D;">//      id=&quot;myImg&quot;</span></span>
<span class="line"><span style="color:#6A737D;">//      src=&quot;example-800w.jpg&quot;&gt;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;myImg&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">img.srcset</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;example-320w.jpg 320w,</span></span>
<span class="line"><span style="color:#6A737D;">//  example-480w.jpg 480w,</span></span>
<span class="line"><span style="color:#6A737D;">//  example-800w.jpg 800w&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">img.sizes</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;(max-width: 320px) 280px,</span></span>
<span class="line"><span style="color:#6A737D;">//  (max-width: 480px) 440px,</span></span>
<span class="line"><span style="color:#6A737D;">//  800px&quot;</span></span></code></pre></div><p>上面代码中，<code>sizes</code>属性指定，对于小于<code>320px</code>的屏幕，图像的宽度为<code>280px</code>；对于小于<code>480px</code>的屏幕，图像宽度为<code>440px</code>；其他情况下，图像宽度为<code>800px</code>。然后，浏览器会根据当前屏幕下的图像宽度，到<code>srcset</code>属性加载宽度最接近的图像。</p><h2 id="htmlimageelement-width-htmlimageelement-height" tabindex="-1">HTMLImageElement.width，HTMLImageElement.height <a class="header-anchor" href="#htmlimageelement-width-htmlimageelement-height" aria-label="Permalink to &quot;HTMLImageElement.width，HTMLImageElement.height&quot;">​</a></h2><p><code>width</code>属性表示<code>&lt;img&gt;</code>的 HTML 宽度，<code>height</code>属性表示高度。这两个属性返回的都是整数。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// HTML 代码如下</span></span>
<span class="line"><span style="color:#6A737D;">// &lt;img width=&quot;300&quot; height=&quot;400&quot; id=&quot;myImg&quot; src=&quot;pic.jpg&quot;&gt;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;img&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">img.width </span><span style="color:#6A737D;">// 300</span></span>
<span class="line"><span style="color:#E1E4E8;">img.height </span><span style="color:#6A737D;">// 400</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// HTML 代码如下</span></span>
<span class="line"><span style="color:#6A737D;">// &lt;img width=&quot;300&quot; height=&quot;400&quot; id=&quot;myImg&quot; src=&quot;pic.jpg&quot;&gt;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;img&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">img.width </span><span style="color:#6A737D;">// 300</span></span>
<span class="line"><span style="color:#24292E;">img.height </span><span style="color:#6A737D;">// 400</span></span></code></pre></div><p>如果图像还没有加载，这两个属性返回的都是<code>0</code>。</p><p>如果 HTML 代码没有设置<code>width</code>和<code>height</code>属性，则它们返回的是图像的实际宽度和高度，即<code>HTMLImageElement.naturalWidth</code>属性和<code>HTMLImageElement.naturalHeight</code>属性。</p><h2 id="htmlimageelement-naturalwidth-htmlimageelement-naturalheight" tabindex="-1">HTMLImageElement.naturalWidth，HTMLImageElement.naturalHeight <a class="header-anchor" href="#htmlimageelement-naturalwidth-htmlimageelement-naturalheight" aria-label="Permalink to &quot;HTMLImageElement.naturalWidth，HTMLImageElement.naturalHeight&quot;">​</a></h2><p><code>HTMLImageElement.naturalWidth</code>属性表示图像的实际宽度（单位像素），<code>HTMLImageElement.naturalHeight</code>属性表示实际高度。这两个属性返回的都是整数。</p><p>如果图像还没有指定或不可得，这两个属性都等于<code>0</code>。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;img&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (img.naturalHeight </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> img.naturalWidth) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  img.classList.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;portrait&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;img&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (img.naturalHeight </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> img.naturalWidth) {</span></span>
<span class="line"><span style="color:#24292E;">  img.classList.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;portrait&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>上面代码中，如果图片的高度大于宽度，则设为<code>portrait</code>模式。</p><h2 id="htmlimageelement-complete" tabindex="-1">HTMLImageElement.complete <a class="header-anchor" href="#htmlimageelement-complete" aria-label="Permalink to &quot;HTMLImageElement.complete&quot;">​</a></h2><p><code>HTMLImageElement.complete</code>属性返回一个布尔值，表示图表是否已经加载完成。如果<code>&lt;img&gt;</code>元素没有<code>src</code>属性，也会返回<code>true</code>。</p><h2 id="htmlimageelement-crossorigin" tabindex="-1">HTMLImageElement.crossOrigin <a class="header-anchor" href="#htmlimageelement-crossorigin" aria-label="Permalink to &quot;HTMLImageElement.crossOrigin&quot;">​</a></h2><p><code>HTMLImageElement.crossOrigin</code>属性用于读写<code>&lt;img&gt;</code>元素的<code>crossorigin</code>属性，表示跨域设置。</p><p>这个属性有两个可能的值。</p><ul><li><code>anonymous</code>：跨域请求不要求用户身份（credentials），这是默认值。</li><li><code>use-credentials</code>：跨域请求要求用户身份。</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// HTML 代码如下</span></span>
<span class="line"><span style="color:#6A737D;">// &lt;img crossorigin=&quot;anonymous&quot; id=&quot;myImg&quot; src=&quot;pic.jpg&quot;&gt;</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> img </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;img&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">img.crossOrigin </span><span style="color:#6A737D;">// &quot;anonymous&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// HTML 代码如下</span></span>
<span class="line"><span style="color:#6A737D;">// &lt;img crossorigin=&quot;anonymous&quot; id=&quot;myImg&quot; src=&quot;pic.jpg&quot;&gt;</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> img </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;img&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">img.crossOrigin </span><span style="color:#6A737D;">// &quot;anonymous&quot;</span></span></code></pre></div><h2 id="htmlimageelement-referrerpolicy" tabindex="-1">HTMLImageElement.referrerPolicy <a class="header-anchor" href="#htmlimageelement-referrerpolicy" aria-label="Permalink to &quot;HTMLImageElement.referrerPolicy&quot;">​</a></h2><p><code>HTMLImageElement.referrerPolicy</code>用来读写<code>&lt;img&gt;</code>元素的 HTML 属性<code>referrerpolicy</code>，表示请求图像资源时，如何处理 HTTP 请求的<code>referrer</code>字段。</p><p>它有五个可能的值。</p><ul><li><code>no-referrer</code>：不带有<code>referrer</code>字段。</li><li><code>no-referrer-when-downgrade</code>：如果请求的地址不是 HTTPS 协议，就不带有<code>referrer</code>字段，这是默认值。</li><li><code>origin</code>：<code>referrer</code>字段是当前网页的地址，包含协议、域名和端口。</li><li><code>origin-when-cross-origin</code>：如果请求的地址与当前网页是同源关系，那么<code>referrer</code>字段将带有完整路径，否则将只包含协议、域名和端口。</li><li><code>unsafe-url</code>：<code>referrer</code>字段包含当前网页的地址，除了协议、域名和端口以外，还包括路径。这个设置是不安全的，因为会泄漏路径信息。</li></ul><h2 id="htmlimageelement-x-htmlimageelement-y" tabindex="-1">HTMLImageElement.x，HTMLImageElement.y <a class="header-anchor" href="#htmlimageelement-x-htmlimageelement-y" aria-label="Permalink to &quot;HTMLImageElement.x，HTMLImageElement.y&quot;">​</a></h2><p><code>HTMLImageElement.x</code>属性返回图像左上角相对于页面左上角的横坐标，<code>HTMLImageElement.y</code>属性返回纵坐标。</p><h2 id="事件属性" tabindex="-1">事件属性 <a class="header-anchor" href="#事件属性" aria-label="Permalink to &quot;事件属性&quot;">​</a></h2><p>图像加载完成，会触发<code>onload</code>属性指定的回调函数。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// HTML 代码为 &lt;img src=&quot;example.jpg&quot; onload=&quot;loadImage()&quot;&gt;</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">loadImage</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Image is loaded&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// HTML 代码为 &lt;img src=&quot;example.jpg&quot; onload=&quot;loadImage()&quot;&gt;</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">loadImage</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Image is loaded&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>图像加载过程中发生错误，会触发<code>onerror</code>属性指定的回调函数。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// HTML 代码为 &lt;img src=&quot;image.gif&quot; onerror=&quot;myFunction()&quot;&gt;</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">myFunction</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;There is something wrong&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// HTML 代码为 &lt;img src=&quot;image.gif&quot; onerror=&quot;myFunction()&quot;&gt;</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">myFunction</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;There is something wrong&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,58),o=[p];function t(c,r,i,y,d,E){return a(),n("div",null,o)}const u=s(l,[["render",t]]);export{g as __pageData,u as default};
