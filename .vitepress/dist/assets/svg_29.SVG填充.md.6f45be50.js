import{_ as s,o as l,c as a,Q as n}from"./chunks/framework.681fc4ae.js";const d=JSON.parse('{"title":"SVG填充","description":"","frontmatter":{},"headers":[],"relativePath":"svg/29.SVG填充.md","filePath":"svg/29.SVG填充.md"}'),o={name:"svg/29.SVG填充.md"},p=n(`<h1 id="svg填充" tabindex="-1">SVG填充 <a class="header-anchor" href="#svg填充" aria-label="Permalink to &quot;SVG填充&quot;">​</a></h1><hr><blockquote></blockquote><ul><li><a href="#填充示例">填充示例</a></li><li><a href="#填充和描边示例">填充和描边示例</a></li><li><a href="#fill-opacity">fill-opacity</a></li><li><a href="#fill-rule">fill-rule</a></li></ul><p>SVG图形的fill定义了其轮廓内部的颜色。换句话说就是SVG形状的表面。fill是你可以为任何SVG图形设置的基础<a href="./27.SVG和CSS-级联样式表.html">CSS属性</a>之一。</p><h2 id="填充示例" tabindex="-1">填充示例 <a class="header-anchor" href="#填充示例" aria-label="Permalink to &quot;填充示例&quot;">​</a></h2><p>SVG形状的fill是在形状轮廓内的填充。下面是一个SVG填充的示例：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">circle</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: none; fill: #0000ff;&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">circle</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: none; fill: #0000ff;&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>这个例子定义了一个填充色为蓝色（<code>#0000ff</code>）无描边的圆。最终图片如下：</p><svg width="500" height="100"><circle cx="50" cy="50" r="25" style="stroke:none;fill:#0000ff;"></circle></svg><h2 id="填充和描边示例" tabindex="-1">填充和描边示例 <a class="header-anchor" href="#填充和描边示例" aria-label="Permalink to &quot;填充和描边示例&quot;">​</a></h2><p>你可以在SVG图形上组合使用描边和填充色。示例如下：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">circle</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000066; fill: #3333ff;&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">circle</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000066; fill: #3333ff;&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>这个例子定义了一个描边为深蓝色（<code>#000066</code>）填充为浅蓝色（<code>#3333ff</code>）的圆，最终图片如下：</p><svg width="500" height="100"><circle cx="50" cy="50" r="25" style="stroke:#000066;fill:#3333ff;"></circle></svg><h2 id="fill-opacity" tabindex="-1">fill-opacity <a class="header-anchor" href="#fill-opacity" aria-label="Permalink to &quot;fill-opacity&quot;">​</a></h2><p>SVG CSS属性<code>fill-opacity</code>用来设置图形填充色的不透明度。其值为0和1之间的小数。值越接近0，填充越透明。值越接近1，填充越不透明。<code>fill-opacity</code>默认为1，表示填充色完全不透明。</p><p>下面例子中包含两个带有不同<code>fill-opacity</code>值的圆：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">text</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">x</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;22&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">y</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;40&quot;</span><span style="color:#E1E4E8;">&gt;Text Behind Shape&lt;/</span><span style="color:#85E89D;">text</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">circle</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: none; fill: #0000ff;</span></span>
<span class="line"><span style="color:#9ECBFF;">               fill-opacity: 0.3;  &quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">circle</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;120&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: none; fill: #0000ff;</span></span>
<span class="line"><span style="color:#9ECBFF;">               fill-opacity: 0.7;  &quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">text</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">x</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;22&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">y</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;40&quot;</span><span style="color:#24292E;">&gt;Text Behind Shape&lt;/</span><span style="color:#22863A;">text</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">circle</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: none; fill: #0000ff;</span></span>
<span class="line"><span style="color:#032F62;">               fill-opacity: 0.3;  &quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">circle</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;120&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: none; fill: #0000ff;</span></span>
<span class="line"><span style="color:#032F62;">               fill-opacity: 0.7;  &quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>最终图片如下：</p><svg width="500" height="120"><text x="22" y="40">Text Behind Shape</text><circle cx="50" cy="50" r="25" style="stroke:none;fill:#0000ff;fill-opacity:0.3;"></circle><circle cx="120" cy="50" r="25" style="stroke:none;fill:#0000ff;fill-opacity:0.7;"></circle></svg><p>注意右边的圆后面的文本比左边的可见性小。这是因为右边圆的<code>fill-opacity</code>值比左边的大。</p><h2 id="fill-rule" tabindex="-1">fill-rule <a class="header-anchor" href="#fill-rule" aria-label="Permalink to &quot;fill-rule&quot;">​</a></h2><p><code>fill-rule</code>确定了如何填充复杂图形。<code>fill-rule</code>可以采用两种不同的值，如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">nonzero</span></span>
<span class="line"><span style="color:#e1e4e8;">evenodd</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">nonzero</span></span>
<span class="line"><span style="color:#24292e;">evenodd</span></span></code></pre></div><p>通常，这两个值用于确定形状内部和外部的规则。只有内部是填充。对于一个圆，这很简单，但对于更复杂的形状，这并不是那么容易。请看这个<code>&lt;path&gt;</code>例子：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;M50,20 l40,40 l-40,40 l-40,-40 l40,-40</span></span>
<span class="line"><span style="color:#9ECBFF;">         M50,40 l20,20 l-20,20 l-20,-20 l20,-20&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000;</span></span>
<span class="line"><span style="color:#9ECBFF;">         fill: #6666ff;</span></span>
<span class="line"><span style="color:#9ECBFF;">         fill-rule: nonzero;</span></span>
<span class="line"><span style="color:#9ECBFF;">      &quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;M150,20 l40,40 l-40,40 l-40,-40 l40,-40</span></span>
<span class="line"><span style="color:#9ECBFF;">         M150,40 l-20,20 l20,20 l20,-20 l-20,-20&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">         </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000;</span></span>
<span class="line"><span style="color:#9ECBFF;">         fill: #6666ff;</span></span>
<span class="line"><span style="color:#9ECBFF;">         fill-rule: nonzero;&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">path</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">d</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;M50,20 l40,40 l-40,40 l-40,-40 l40,-40</span></span>
<span class="line"><span style="color:#032F62;">         M50,40 l20,20 l-20,20 l-20,-20 l20,-20&quot;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000;</span></span>
<span class="line"><span style="color:#032F62;">         fill: #6666ff;</span></span>
<span class="line"><span style="color:#032F62;">         fill-rule: nonzero;</span></span>
<span class="line"><span style="color:#032F62;">      &quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">path</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">d</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;M150,20 l40,40 l-40,40 l-40,-40 l40,-40</span></span>
<span class="line"><span style="color:#032F62;">         M150,40 l-20,20 l20,20 l20,-20 l-20,-20&quot;</span></span>
<span class="line"><span style="color:#24292E;">         </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000;</span></span>
<span class="line"><span style="color:#032F62;">         fill: #6666ff;</span></span>
<span class="line"><span style="color:#032F62;">         fill-rule: nonzero;&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>这两个路径例子都由8条线绘制的菱形组成，在较大菱形内部还有一个小的菱形。左边的路径中，内部菱形从左向右（顺时针）。右边的路径中，内部菱形从右向左（逆时针）。下面是使用<code>fill-rule: nonzero</code>的最终图片：</p><svg width="500" height="100"><path d="M50,20 l40,40 l-40,40 l-40,-40 l40,-40
         M50,40 l20,20 l-20,20 l-20,-20 l20,-20" style="stroke:#000000;fill:#6666ff;fill-rule:nonzero;"></path><path d="M150,20 l40,40 l-40,40 l-40,-40 l40,-40
         M150,40 l-20,20 l20,20 l20,-20 l-20,-20" style="stroke:#000000;fill:#6666ff;fill-rule:nonzero;"></path></svg><p>正如你所见，<code>nonzero</code>规则依据内部菱形的绘制方向确定内部菱形在形状的内部还是外部。用于确定点是在形状内部还是外部的<code>nonzero</code>规则：</p><p>从一个点往任何方向上绘制一条直线（射线）。形状中的路径每次穿过此射线时，如果路径从左到右穿过射线，则计数器加1，如果路径从右到左穿过射线，则计数器减1。如果穿过射线的所有路径都计数完，并且计数器为0，则该点被认为在路径外。如果计数器非0，则该点被认为在路径内。</p><p>下面是两个使用同样的<code>fill-rule: evenodd</code>的路径例子：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;M50,20 l40,40 l-40,40 l-40,-40 l40,-40</span></span>
<span class="line"><span style="color:#9ECBFF;">         M50,40 l20,20 l-20,20 l-20,-20 l20,-20&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000;</span></span>
<span class="line"><span style="color:#9ECBFF;">      fill: #6666ff;</span></span>
<span class="line"><span style="color:#9ECBFF;">      fill-rule: evenodd;&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">d</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;M150,20 l-40,40 l40,40 l40,-40 l-40,-40</span></span>
<span class="line"><span style="color:#9ECBFF;">         M150,40 l-20,20 l20,20 l20,-20 l-20,-20&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000;</span></span>
<span class="line"><span style="color:#9ECBFF;">      fill: #6666ff;</span></span>
<span class="line"><span style="color:#9ECBFF;">      fill-rule: evenodd;&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">path</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">d</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;M50,20 l40,40 l-40,40 l-40,-40 l40,-40</span></span>
<span class="line"><span style="color:#032F62;">         M50,40 l20,20 l-20,20 l-20,-20 l20,-20&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000;</span></span>
<span class="line"><span style="color:#032F62;">      fill: #6666ff;</span></span>
<span class="line"><span style="color:#032F62;">      fill-rule: evenodd;&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">path</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">d</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;M150,20 l-40,40 l40,40 l40,-40 l-40,-40</span></span>
<span class="line"><span style="color:#032F62;">         M150,40 l-20,20 l20,20 l20,-20 l-20,-20&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000;</span></span>
<span class="line"><span style="color:#032F62;">      fill: #6666ff;</span></span>
<span class="line"><span style="color:#032F62;">      fill-rule: evenodd;&quot;</span><span style="color:#24292E;"> /&gt;</span></span></code></pre></div><p>最终图片如下：</p><svg width="500" height="100"><path d="M50,20 l40,40 l-40,40 l-40,-40 l40,-40
             M50,40 l20,20 l-20,20 l-20,-20 l20,-20" style="stroke:#000000;fill:#6666ff;fill-rule:evenodd;"></path><path d="M150,20 l-40,40 l40,40 l40,-40 l-40,-40
             M150,40 l-20,20 l20,20 l20,-20 l-20,-20" style="stroke:#000000;fill:#6666ff;fill-rule:evenodd;"></path></svg><p>用于确定点是在形状内部还是外部的<code>evenodd</code>规则：</p><p>从一个点往任何方向上绘制一条直线（射线）。每次路径穿过射线，计数器加1。如果总数是偶数，则点在外部。如果总计数为奇数，点在形状内。</p>`,37),e=[p];function t(c,r,y,E,i,u){return l(),a("div",null,e)}const f=s(o,[["render",t]]);export{d as __pageData,f as default};
