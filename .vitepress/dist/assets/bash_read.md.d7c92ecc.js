import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.681fc4ae.js";const h=JSON.parse('{"title":"read 命令","description":"","frontmatter":{},"headers":[],"relativePath":"bash/read.md","filePath":"bash/read.md"}'),p={name:"bash/read.md"},o=l(`<h1 id="read-命令" tabindex="-1">read 命令 <a class="header-anchor" href="#read-命令" aria-label="Permalink to &quot;read 命令&quot;">​</a></h1><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><p>有时，脚本需要在执行过程中，由用户提供一部分数据，这时可以使用<code>read</code>命令。它将用户的输入存入一个变量，方便后面的代码使用。用户按下回车键，就表示输入结束。</p><p><code>read</code>命令的格式如下。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> [-options] [variable...]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">read</span><span style="color:#24292E;"> [-options] [variable...]</span></span></code></pre></div><p>上面语法中，<code>options</code>是参数选项，<code>variable</code>是用来保存输入数值的一个或多个变量名。如果没有提供变量名，环境变量<code>REPLY</code>会包含用户输入的一整行数据。</p><p>下面是一个例子<code>demo.sh</code>。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;输入一些文本 &gt; &quot;</span></span>
<span class="line"><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">text</span></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;你的输入：</span><span style="color:#E1E4E8;">$text</span><span style="color:#9ECBFF;">&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;输入一些文本 &gt; &quot;</span></span>
<span class="line"><span style="color:#005CC5;">read</span><span style="color:#24292E;"> </span><span style="color:#032F62;">text</span></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;你的输入：</span><span style="color:#24292E;">$text</span><span style="color:#032F62;">&quot;</span></span></code></pre></div><p>上面例子中，先显示一行提示文本，然后会等待用户输入文本。用户输入的文本，存入变量<code>text</code>，在下一行显示出来。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bash</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">demo.sh</span></span>
<span class="line"><span style="color:#B392F0;">输入一些文本</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">你好，世界</span></span>
<span class="line"><span style="color:#B392F0;">你的输入：你好，世界</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bash</span><span style="color:#24292E;"> </span><span style="color:#032F62;">demo.sh</span></span>
<span class="line"><span style="color:#6F42C1;">输入一些文本</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">你好，世界</span></span>
<span class="line"><span style="color:#6F42C1;">你的输入：你好，世界</span></span></code></pre></div><p><code>read</code>可以接受用户输入的多个值。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Please,</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enter</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">your</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">firstname</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">and</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lastname</span></span>
<span class="line"><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">FN</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">LN</span></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hi! </span><span style="color:#E1E4E8;">$LN</span><span style="color:#9ECBFF;">, </span><span style="color:#E1E4E8;">$FN</span><span style="color:#9ECBFF;"> !&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Please,</span><span style="color:#24292E;"> </span><span style="color:#032F62;">enter</span><span style="color:#24292E;"> </span><span style="color:#032F62;">your</span><span style="color:#24292E;"> </span><span style="color:#032F62;">firstname</span><span style="color:#24292E;"> </span><span style="color:#032F62;">and</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lastname</span></span>
<span class="line"><span style="color:#005CC5;">read</span><span style="color:#24292E;"> </span><span style="color:#032F62;">FN</span><span style="color:#24292E;"> </span><span style="color:#032F62;">LN</span></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hi! </span><span style="color:#24292E;">$LN</span><span style="color:#032F62;">, </span><span style="color:#24292E;">$FN</span><span style="color:#032F62;"> !&quot;</span></span></code></pre></div><p>上面例子中，<code>read</code>根据用户的输入，同时为两个变量赋值。</p><p>如果用户的输入项少于<code>read</code>命令给出的变量数目，那么额外的变量值为空。如果用户的输入项多于定义的变量，那么多余的输入项会包含到最后一个变量中。</p><p>如果<code>read</code>命令之后没有定义变量名，那么环境变量<code>REPLY</code>会包含所有的输入。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="color:#6A737D;"># read-single: read multiple values into default variable</span></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Enter one or more values &gt; &quot;</span></span>
<span class="line"><span style="color:#79B8FF;">read</span></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;REPLY = &#39;</span><span style="color:#E1E4E8;">$REPLY</span><span style="color:#9ECBFF;">&#39;&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="color:#6A737D;"># read-single: read multiple values into default variable</span></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Enter one or more values &gt; &quot;</span></span>
<span class="line"><span style="color:#005CC5;">read</span></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;REPLY = &#39;</span><span style="color:#24292E;">$REPLY</span><span style="color:#032F62;">&#39;&quot;</span></span></code></pre></div><p>上面脚本的运行结果如下。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">read-single</span></span>
<span class="line"><span style="color:#B392F0;">Enter</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">one</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">or</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">more</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">values</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">b</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">d</span></span>
<span class="line"><span style="color:#B392F0;">REPLY</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;a b c d&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">read-single</span></span>
<span class="line"><span style="color:#6F42C1;">Enter</span><span style="color:#24292E;"> </span><span style="color:#032F62;">one</span><span style="color:#24292E;"> </span><span style="color:#032F62;">or</span><span style="color:#24292E;"> </span><span style="color:#032F62;">more</span><span style="color:#24292E;"> </span><span style="color:#032F62;">values</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">b</span><span style="color:#24292E;"> </span><span style="color:#032F62;">c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">d</span></span>
<span class="line"><span style="color:#6F42C1;">REPLY</span><span style="color:#24292E;"> </span><span style="color:#032F62;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;a b c d&#39;</span></span></code></pre></div><p><code>read</code>命令除了读取键盘输入，可以用来读取文件。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">filename</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;/etc/hosts&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">myline</span></span>
<span class="line"><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$myline</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#F97583;">done</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> $filename</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">filename</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;/etc/hosts&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">read</span><span style="color:#24292E;"> </span><span style="color:#032F62;">myline</span></span>
<span class="line"><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$myline</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#D73A49;">done</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> $filename</span></span></code></pre></div><p>上面的例子通过<code>read</code>命令，读取一个文件的内容。<code>done</code>命令后面的定向符<code>&lt;</code>，将文件内容导向<code>read</code>命令，每次读取一行，存入变量<code>myline</code>，直到文件读取完毕。</p><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><p><code>read</code>命令的参数如下。</p><p><strong>（1）-t 参数</strong></p><p><code>read</code>命令的<code>-t</code>参数，设置了超时的秒数。如果超过了指定时间，用户仍然没有输入，脚本将放弃等待，继续向下执行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;输入一些文本 &gt; &quot;</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-t</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">response</span><span style="color:#E1E4E8;">; </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;用户已经输入了&quot;</span></span>
<span class="line"><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;用户没有输入&quot;</span></span>
<span class="line"><span style="color:#F97583;">fi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;输入一些文本 &gt; &quot;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">read</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-t</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">response</span><span style="color:#24292E;">; </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;用户已经输入了&quot;</span></span>
<span class="line"><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;用户没有输入&quot;</span></span>
<span class="line"><span style="color:#D73A49;">fi</span></span></code></pre></div><p>上面例子中，输入命令会等待3秒，如果用户超过这个时间没有输入，这个命令就会执行失败。<code>if</code>根据命令的返回值，转入<code>else</code>代码块，继续往下执行。</p><p>环境变量<code>TMOUT</code>也可以起到同样作用，指定<code>read</code>命令等待用户输入的时间（单位为秒）。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">TMOUT=</span><span style="color:#79B8FF;">3</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">response</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">TMOUT=</span><span style="color:#005CC5;">3</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">read</span><span style="color:#24292E;"> </span><span style="color:#032F62;">response</span></span></code></pre></div><p>上面例子也是等待3秒，如果用户还没有输入，就会超时。</p><p><strong>（2）-p 参数</strong></p><p><code>-p</code>参数指定用户输入的提示信息。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Enter one or more values &gt; &quot;</span></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;REPLY = &#39;</span><span style="color:#E1E4E8;">$REPLY</span><span style="color:#9ECBFF;">&#39;&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">read</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Enter one or more values &gt; &quot;</span></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;REPLY = &#39;</span><span style="color:#24292E;">$REPLY</span><span style="color:#032F62;">&#39;&quot;</span></span></code></pre></div><p>上面例子中，先显示<code>Enter one or more values &gt;</code>，再接受用户的输入。</p><p><strong>（3）-a 参数</strong></p><p><code>-a</code>参数把用户的输入赋值给一个数组，从零号位置开始。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-a</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">people</span></span>
<span class="line"><span style="color:#B392F0;">alice</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">duchess</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">dodo</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> \${people[2]}</span></span>
<span class="line"><span style="color:#B392F0;">dodo</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">read</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-a</span><span style="color:#24292E;"> </span><span style="color:#032F62;">people</span></span>
<span class="line"><span style="color:#6F42C1;">alice</span><span style="color:#24292E;"> </span><span style="color:#032F62;">duchess</span><span style="color:#24292E;"> </span><span style="color:#032F62;">dodo</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> \${people[2]}</span></span>
<span class="line"><span style="color:#6F42C1;">dodo</span></span></code></pre></div><p>上面例子中，用户输入被赋值给一个数组<code>people</code>，这个数组的2号成员就是<code>dodo</code>。</p><p><strong>（4）-n 参数</strong></p><p><code>-n</code>参数指定只读取若干个字符作为变量值，而不是整行读取。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">letter</span></span>
<span class="line"><span style="color:#B392F0;">abcdefghij</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">echo</span><span style="color:#E1E4E8;"> $letter</span></span>
<span class="line"><span style="color:#B392F0;">abc</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">read</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-n</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#032F62;">letter</span></span>
<span class="line"><span style="color:#6F42C1;">abcdefghij</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">echo</span><span style="color:#24292E;"> $letter</span></span>
<span class="line"><span style="color:#6F42C1;">abc</span></span></code></pre></div><p>上面例子中，变量<code>letter</code>只包含3个字母。</p><p><strong>（5）-e 参数</strong></p><p><code>-e</code>参数允许用户输入的时候，使用<code>readline</code>库提供的快捷键，比如自动补全。具体的快捷键可以参阅《行操作》一章。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Please</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">input</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">path</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">to</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">file:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-e</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">fileName</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> $fileName</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Please</span><span style="color:#24292E;"> </span><span style="color:#032F62;">input</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">path</span><span style="color:#24292E;"> </span><span style="color:#032F62;">to</span><span style="color:#24292E;"> </span><span style="color:#032F62;">the</span><span style="color:#24292E;"> </span><span style="color:#032F62;">file:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">read</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-e</span><span style="color:#24292E;"> </span><span style="color:#032F62;">fileName</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> $fileName</span></span></code></pre></div><p>上面例子中，<code>read</code>命令接受用户输入的文件名。这时，用户可能想使用 Tab 键的文件名“自动补全”功能，但是<code>read</code>命令的输入默认不支持<code>readline</code>库的功能。<code>-e</code>参数就可以允许用户使用自动补全。</p><p><strong>（6）其他参数</strong></p><ul><li><code>-d delimiter</code>：定义字符串<code>delimiter</code>的第一个字符作为用户输入的结束，而不是一个换行符。</li><li><code>-r</code>：raw 模式，表示不把用户输入的反斜杠字符解释为转义字符。</li><li><code>-s</code>：使得用户的输入不显示在屏幕上，这常常用于输入密码或保密信息。</li><li><code>-u fd</code>：使用文件描述符<code>fd</code>作为输入。</li></ul><h2 id="ifs-变量" tabindex="-1">IFS 变量 <a class="header-anchor" href="#ifs-变量" aria-label="Permalink to &quot;IFS 变量&quot;">​</a></h2><p><code>read</code>命令读取的值，默认是以空格分隔。可以通过自定义环境变量<code>IFS</code>（内部字段分隔符，Internal Field Separator 的缩写），修改分隔标志。</p><p><code>IFS</code>的默认值是空格、Tab 符号、换行符号，通常取第一个（即空格）。</p><p>如果把<code>IFS</code>定义成冒号（<code>:</code>）或分号（<code>;</code>），就可以分隔以这两个符号分隔的值，这对读取文件很有用。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="color:#6A737D;"># read-ifs: read fields from a file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">FILE</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">/etc/passwd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-p</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Enter a username &gt; &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user_name</span></span>
<span class="line"><span style="color:#E1E4E8;">file_info</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;$(</span><span style="color:#B392F0;">grep</span><span style="color:#9ECBFF;"> &quot;^</span><span style="color:#E1E4E8;">$user_name</span><span style="color:#9ECBFF;">:&quot; </span><span style="color:#E1E4E8;">$FILE</span><span style="color:#9ECBFF;">)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> [ </span><span style="color:#F97583;">-n</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$file_info</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;"> ]; </span><span style="color:#F97583;">then</span></span>
<span class="line"><span style="color:#E1E4E8;">  IFS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;:&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pw</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">uid</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gid</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">home</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">shell</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$file_info</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;User = &#39;</span><span style="color:#E1E4E8;">$user</span><span style="color:#9ECBFF;">&#39;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;UID = &#39;</span><span style="color:#E1E4E8;">$uid</span><span style="color:#9ECBFF;">&#39;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;GID = &#39;</span><span style="color:#E1E4E8;">$gid</span><span style="color:#9ECBFF;">&#39;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Full Name = &#39;</span><span style="color:#E1E4E8;">$name</span><span style="color:#9ECBFF;">&#39;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Home Dir. = &#39;</span><span style="color:#E1E4E8;">$home</span><span style="color:#9ECBFF;">&#39;&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Shell = &#39;</span><span style="color:#E1E4E8;">$shell</span><span style="color:#9ECBFF;">&#39;&quot;</span></span>
<span class="line"><span style="color:#F97583;">else</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;No such user &#39;</span><span style="color:#E1E4E8;">$user_name</span><span style="color:#9ECBFF;">&#39;&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&gt;&amp;2</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">exit</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span></span>
<span class="line"><span style="color:#F97583;">fi</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="color:#6A737D;"># read-ifs: read fields from a file</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">FILE</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">/etc/passwd</span></span>
<span class="line"></span>
<span class="line"><span style="color:#005CC5;">read</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-p</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Enter a username &gt; &quot;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user_name</span></span>
<span class="line"><span style="color:#24292E;">file_info</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;$(</span><span style="color:#6F42C1;">grep</span><span style="color:#032F62;"> &quot;^</span><span style="color:#24292E;">$user_name</span><span style="color:#032F62;">:&quot; </span><span style="color:#24292E;">$FILE</span><span style="color:#032F62;">)&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> [ </span><span style="color:#D73A49;">-n</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$file_info</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;"> ]; </span><span style="color:#D73A49;">then</span></span>
<span class="line"><span style="color:#24292E;">  IFS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;:&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">read</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pw</span><span style="color:#24292E;"> </span><span style="color:#032F62;">uid</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gid</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">home</span><span style="color:#24292E;"> </span><span style="color:#032F62;">shell</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$file_info</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;User = &#39;</span><span style="color:#24292E;">$user</span><span style="color:#032F62;">&#39;&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;UID = &#39;</span><span style="color:#24292E;">$uid</span><span style="color:#032F62;">&#39;&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;GID = &#39;</span><span style="color:#24292E;">$gid</span><span style="color:#032F62;">&#39;&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Full Name = &#39;</span><span style="color:#24292E;">$name</span><span style="color:#032F62;">&#39;&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Home Dir. = &#39;</span><span style="color:#24292E;">$home</span><span style="color:#032F62;">&#39;&quot;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Shell = &#39;</span><span style="color:#24292E;">$shell</span><span style="color:#032F62;">&#39;&quot;</span></span>
<span class="line"><span style="color:#D73A49;">else</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;No such user &#39;</span><span style="color:#24292E;">$user_name</span><span style="color:#032F62;">&#39;&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&gt;&amp;2</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">exit</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span></span>
<span class="line"><span style="color:#D73A49;">fi</span></span></code></pre></div><p>上面例子中，<code>IFS</code>设为冒号，然后用来分解<code>/etc/passwd</code>文件的一行。<code>IFS</code>的赋值命令和<code>read</code>命令写在一行，这样的话，<code>IFS</code>的改变仅对后面的命令生效，该命令执行后<code>IFS</code>会自动恢复原来的值。如果不写在一行，就要采用下面的写法。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">OLD_IFS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$IFS</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">IFS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;:&quot;</span></span>
<span class="line"><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">user</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pw</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">uid</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">gid</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">home</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">shell</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;&lt;&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$file_info</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">IFS</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$OLD_IFS</span><span style="color:#9ECBFF;">&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">OLD_IFS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$IFS</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">IFS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;:&quot;</span></span>
<span class="line"><span style="color:#005CC5;">read</span><span style="color:#24292E;"> </span><span style="color:#032F62;">user</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pw</span><span style="color:#24292E;"> </span><span style="color:#032F62;">uid</span><span style="color:#24292E;"> </span><span style="color:#032F62;">gid</span><span style="color:#24292E;"> </span><span style="color:#032F62;">name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">home</span><span style="color:#24292E;"> </span><span style="color:#032F62;">shell</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;&lt;&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$file_info</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#24292E;">IFS</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$OLD_IFS</span><span style="color:#032F62;">&quot;</span></span></code></pre></div><p>另外，上面例子中，<code>&lt;&lt;&lt;</code>是 Here 字符串，用于将变量值转为标准输入，因为<code>read</code>命令只能解析标准输入。</p><p>如果<code>IFS</code>设为空字符串，就等同于将整行读入一个变量。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="color:#E1E4E8;">input</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&quot;/path/to/txt/file&quot;</span></span>
<span class="line"><span style="color:#F97583;">while</span><span style="color:#E1E4E8;"> IFS</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">read</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-r</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">line</span></span>
<span class="line"><span style="color:#F97583;">do</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$line</span><span style="color:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="color:#F97583;">done</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;</span><span style="color:#E1E4E8;">$input</span><span style="color:#9ECBFF;">&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">#!/bin/bash</span></span>
<span class="line"><span style="color:#24292E;">input</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&quot;/path/to/txt/file&quot;</span></span>
<span class="line"><span style="color:#D73A49;">while</span><span style="color:#24292E;"> IFS</span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">read</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-r</span><span style="color:#24292E;"> </span><span style="color:#032F62;">line</span></span>
<span class="line"><span style="color:#D73A49;">do</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$line</span><span style="color:#032F62;">&quot;</span></span>
<span class="line"><span style="color:#D73A49;">done</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;</span><span style="color:#24292E;">$input</span><span style="color:#032F62;">&quot;</span></span></code></pre></div><p>上面的命令可以逐行读取文件，每一行存入变量<code>line</code>，打印出来以后再读取下一行。</p>`,59),e=[o];function c(t,r,y,E,F,i){return a(),n("div",null,e)}const u=s(p,[["render",c]]);export{h as __pageData,u as default};
