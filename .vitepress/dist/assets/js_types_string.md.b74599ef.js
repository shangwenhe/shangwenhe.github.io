import{_ as s,o as a,c as n,Q as p}from"./chunks/framework.b2e9bf53.js";const u=JSON.parse('{"title":"字符串","description":"","frontmatter":{},"headers":[],"relativePath":"js/types/string.md","filePath":"js/types/string.md"}'),l={name:"js/types/string.md"},o=p(`<h1 id="字符串" tabindex="-1">字符串 <a class="header-anchor" href="#字符串" aria-label="Permalink to &quot;字符串&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><h3 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h3><p>字符串就是零个或多个排在一起的字符，放在单引号或双引号之中。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&#39;abc&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;abc&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&#39;abc&#39;</span></span>
<span class="line"><span style="color:#032F62;">&quot;abc&quot;</span></span></code></pre></div><p>单引号字符串的内部，可以使用双引号。双引号字符串的内部，可以使用单引号。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&#39;key = &quot;value&quot;&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">&quot;It&#39;s a long journey&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&#39;key = &quot;value&quot;&#39;</span></span>
<span class="line"><span style="color:#032F62;">&quot;It&#39;s a long journey&quot;</span></span></code></pre></div><p>上面两个都是合法的字符串。</p><p>如果要在单引号字符串的内部，使用单引号，就必须在内部的单引号前面加上反斜杠，用来转义。双引号字符串内部使用双引号，也是如此。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&#39;Did she say </span><span style="color:#79B8FF;">\\&#39;</span><span style="color:#9ECBFF;">Hello</span><span style="color:#79B8FF;">\\&#39;</span><span style="color:#9ECBFF;">?&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Did she say &#39;Hello&#39;?&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&quot;Did she say </span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">Hello</span><span style="color:#79B8FF;">\\&quot;</span><span style="color:#9ECBFF;">?&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Did she say &quot;Hello&quot;?&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&#39;Did she say </span><span style="color:#005CC5;">\\&#39;</span><span style="color:#032F62;">Hello</span><span style="color:#005CC5;">\\&#39;</span><span style="color:#032F62;">?&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Did she say &#39;Hello&#39;?&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&quot;Did she say </span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">Hello</span><span style="color:#005CC5;">\\&quot;</span><span style="color:#032F62;">?&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Did she say &quot;Hello&quot;?&quot;</span></span></code></pre></div><p>由于 HTML 语言的属性值使用双引号，所以很多项目约定 JavaScript 语言的字符串只使用单引号，本教程遵守这个约定。当然，只使用双引号也完全可以。重要的是坚持使用一种风格，不要一会使用单引号表示字符串，一会又使用双引号表示。</p><p>字符串默认只能写在一行内，分成多行将会报错。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#FDAEB7;font-style:italic;">a</span></span>
<span class="line"><span style="color:#E1E4E8;">b</span></span>
<span class="line"><span style="color:#E1E4E8;">c</span><span style="color:#9ECBFF;">&#39;</span></span>
<span class="line"><span style="color:#9ECBFF;">// SyntaxError: Unexpected token ILLEGA</span><span style="color:#FDAEB7;font-style:italic;">L</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#B31D28;font-style:italic;">a</span></span>
<span class="line"><span style="color:#24292E;">b</span></span>
<span class="line"><span style="color:#24292E;">c</span><span style="color:#032F62;">&#39;</span></span>
<span class="line"><span style="color:#032F62;">// SyntaxError: Unexpected token ILLEGA</span><span style="color:#B31D28;font-style:italic;">L</span></span></code></pre></div><p>上面代码将一个字符串分成三行，JavaScript 就会报错。</p><p>如果长字符串必须分成多行，可以在每一行的尾部使用反斜杠。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> longString </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Long </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#9ECBFF;">long </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#9ECBFF;">long </span><span style="color:#79B8FF;">\\</span></span>
<span class="line"><span style="color:#9ECBFF;">string&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">longString</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Long long long string&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> longString </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Long </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#032F62;">long </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#032F62;">long </span><span style="color:#005CC5;">\\</span></span>
<span class="line"><span style="color:#032F62;">string&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">longString</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Long long long string&quot;</span></span></code></pre></div><p>上面代码表示，加了反斜杠以后，原来写在一行的字符串，可以分成多行书写。但是，输出的时候还是单行，效果与写在同一行完全一样。注意，反斜杠的后面必须是换行符，而不能有其他字符（比如空格），否则会报错。</p><p>连接运算符（<code>+</code>）可以连接多个单行字符串，将长字符串拆成多行书写，输出的时候也是单行。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> longString </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Long &#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;long &#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;long &#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;string&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> longString </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Long &#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;long &#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;long &#39;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;string&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><p>如果想输出多行字符串，有一种利用多行注释的变通方法。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () { </span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">line 1</span></span>
<span class="line"><span style="color:#6A737D;">line 2</span></span>
<span class="line"><span style="color:#6A737D;">line 3</span></span>
<span class="line"><span style="color:#6A737D;">*/</span><span style="color:#E1E4E8;">}).</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">split</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">slice</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;line 1</span></span>
<span class="line"><span style="color:#6A737D;">// line 2</span></span>
<span class="line"><span style="color:#6A737D;">// line 3&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () { </span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">line 1</span></span>
<span class="line"><span style="color:#6A737D;">line 2</span></span>
<span class="line"><span style="color:#6A737D;">line 3</span></span>
<span class="line"><span style="color:#6A737D;">*/</span><span style="color:#24292E;">}).</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">split</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">slice</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;line 1</span></span>
<span class="line"><span style="color:#6A737D;">// line 2</span></span>
<span class="line"><span style="color:#6A737D;">// line 3&quot;</span></span></code></pre></div><p>上面的例子中，输出的字符串就是多行。</p><h3 id="转义" tabindex="-1">转义 <a class="header-anchor" href="#转义" aria-label="Permalink to &quot;转义&quot;">​</a></h3><p>反斜杠（\\）在字符串内有特殊含义，用来表示一些特殊字符，所以又称为转义符。</p><p>需要用反斜杠转义的特殊字符，主要有下面这些。</p><ul><li><code>\\0</code> ：null（<code>\\u0000</code>）</li><li><code>\\b</code> ：后退键（<code>\\u0008</code>）</li><li><code>\\f</code> ：换页符（<code>\\u000C</code>）</li><li><code>\\n</code> ：换行符（<code>\\u000A</code>）</li><li><code>\\r</code> ：回车键（<code>\\u000D</code>）</li><li><code>\\t</code> ：制表符（<code>\\u0009</code>）</li><li><code>\\v</code> ：垂直制表符（<code>\\u000B</code>）</li><li><code>\\&#39;</code> ：单引号（<code>\\u0027</code>）</li><li><code>\\&quot;</code> ：双引号（<code>\\u0022</code>）</li><li><code>\\\\</code> ：反斜杠（<code>\\u005C</code>）</li></ul><p>上面这些字符前面加上反斜杠，都表示特殊含义。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;1</span><span style="color:#79B8FF;">\\n</span><span style="color:#9ECBFF;">2&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#6A737D;">// 2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;1</span><span style="color:#005CC5;">\\n</span><span style="color:#032F62;">2&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#6A737D;">// 1</span></span>
<span class="line"><span style="color:#6A737D;">// 2</span></span></code></pre></div><p>上面代码中，<code>\\n</code>表示换行，输出的时候就分成了两行。</p><p>反斜杠还有三种特殊用法。</p><p>（1）<code>\\HHH</code></p><p>反斜杠后面紧跟三个八进制数（<code>000</code>到<code>377</code>），代表一个字符。<code>HHH</code>对应该字符的 Unicode 码点，比如<code>\\251</code>表示版权符号。显然，这种方法只能输出256种字符。</p><p>（2）<code>\\xHH</code></p><p><code>\\x</code>后面紧跟两个十六进制数（<code>00</code>到<code>FF</code>），代表一个字符。<code>HH</code>对应该字符的 Unicode 码点，比如<code>\\xA9</code>表示版权符号。这种方法也只能输出256种字符。</p><p>（3）<code>\\uXXXX</code></p><p><code>\\u</code>后面紧跟四个十六进制数（<code>0000</code>到<code>FFFF</code>），代表一个字符。<code>XXXX</code>对应该字符的 Unicode 码点，比如<code>\\u00A9</code>表示版权符号。</p><p>下面是这三种字符特殊写法的例子。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\251</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// &quot;©&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\xA9</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// &quot;©&quot;</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\u00A9</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// &quot;©&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\172</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;z&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\x7A</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;z&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\u007A</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;z&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// true</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\251</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// &quot;©&quot;</span></span>
<span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\xA9</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// &quot;©&quot;</span></span>
<span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\u00A9</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// &quot;©&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\172</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;z&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\x7A</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;z&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\u007A</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;z&#39;</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// true</span></span></code></pre></div><p>如果在非特殊字符前面使用反斜杠，则反斜杠会被省略。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\a</span><span style="color:#9ECBFF;">&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;a&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\a</span><span style="color:#032F62;">&#39;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;a&quot;</span></span></code></pre></div><p>上面代码中，<code>a</code>是一个正常字符，前面加反斜杠没有特殊含义，反斜杠会被自动省略。</p><p>如果字符串的正常内容之中，需要包含反斜杠，则反斜杠前面需要再加一个反斜杠，用来对自身转义。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&quot;Prev </span><span style="color:#79B8FF;">\\\\</span><span style="color:#9ECBFF;"> Next&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Prev \\ Next&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&quot;Prev </span><span style="color:#005CC5;">\\\\</span><span style="color:#032F62;"> Next&quot;</span></span>
<span class="line"><span style="color:#6A737D;">// &quot;Prev \\ Next&quot;</span></span></code></pre></div><h3 id="字符串与数组" tabindex="-1">字符串与数组 <a class="header-anchor" href="#字符串与数组" aria-label="Permalink to &quot;字符串与数组&quot;">​</a></h3><p>字符串可以被视为字符数组，因此可以使用数组的方括号运算符，用来返回某个位置的字符（位置编号从0开始）。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">s[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// &quot;h&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">s[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// &quot;e&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">s[</span><span style="color:#79B8FF;">4</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// &quot;o&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 直接对字符串使用方括号运算符</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// &quot;e&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">s[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// &quot;h&quot;</span></span>
<span class="line"><span style="color:#24292E;">s[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// &quot;e&quot;</span></span>
<span class="line"><span style="color:#24292E;">s[</span><span style="color:#005CC5;">4</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// &quot;o&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// 直接对字符串使用方括号运算符</span></span>
<span class="line"><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// &quot;e&quot;</span></span></code></pre></div><p>如果方括号中的数字超过字符串的长度，或者方括号中根本不是数字，则返回<code>undefined</code>。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&#39;abc&#39;</span><span style="color:#E1E4E8;">[</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// undefined</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;abc&#39;</span><span style="color:#E1E4E8;">[</span><span style="color:#F97583;">-</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// undefined</span></span>
<span class="line"><span style="color:#9ECBFF;">&#39;abc&#39;</span><span style="color:#E1E4E8;">[</span><span style="color:#9ECBFF;">&#39;x&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#6A737D;">// undefined</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&#39;abc&#39;</span><span style="color:#24292E;">[</span><span style="color:#005CC5;">3</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// undefined</span></span>
<span class="line"><span style="color:#032F62;">&#39;abc&#39;</span><span style="color:#24292E;">[</span><span style="color:#D73A49;">-</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// undefined</span></span>
<span class="line"><span style="color:#032F62;">&#39;abc&#39;</span><span style="color:#24292E;">[</span><span style="color:#032F62;">&#39;x&#39;</span><span style="color:#24292E;">] </span><span style="color:#6A737D;">// undefined</span></span></code></pre></div><p>但是，字符串与数组的相似性仅此而已。实际上，无法改变字符串之中的单个字符。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">delete</span><span style="color:#E1E4E8;"> s[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#6A737D;">// &quot;hello&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">s[</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#6A737D;">// &quot;hello&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">s[</span><span style="color:#79B8FF;">5</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;!&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#6A737D;">// &quot;hello&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">delete</span><span style="color:#24292E;"> s[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#6A737D;">// &quot;hello&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s[</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#6A737D;">// &quot;hello&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s[</span><span style="color:#005CC5;">5</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;!&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#6A737D;">// &quot;hello&quot;</span></span></code></pre></div><p>上面代码表示，字符串内部的单个字符无法改变和增删，这些操作会默默地失败。</p><h3 id="length-属性" tabindex="-1">length 属性 <a class="header-anchor" href="#length-属性" aria-label="Permalink to &quot;length 属性&quot;">​</a></h3><p><code>length</code>属性返回字符串的长度，该属性也是无法改变的。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;hello&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">s.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">s.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">s.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">s.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">s.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 5</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;hello&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">s.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">3</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">s.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">s.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">s.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 5</span></span></code></pre></div><p>上面代码表示字符串的<code>length</code>属性无法改变，但是不会报错。</p><h2 id="字符集" tabindex="-1">字符集 <a class="header-anchor" href="#字符集" aria-label="Permalink to &quot;字符集&quot;">​</a></h2><p>JavaScript 使用 Unicode 字符集。JavaScript 引擎内部，所有字符都用 Unicode 表示。</p><p>JavaScript 不仅以 Unicode 储存字符，还允许直接在程序中使用 Unicode 码点表示字符，即将字符写成<code>\\uxxxx</code>的形式，其中<code>xxxx</code>代表该字符的 Unicode 码点。比如，<code>\\u00A9</code>代表版权符号。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;</span><span style="color:#79B8FF;">\\u00A9</span><span style="color:#9ECBFF;">&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">s </span><span style="color:#6A737D;">// &quot;©&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;</span><span style="color:#005CC5;">\\u00A9</span><span style="color:#032F62;">&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">s </span><span style="color:#6A737D;">// &quot;©&quot;</span></span></code></pre></div><p>解析代码的时候，JavaScript 会自动识别一个字符是字面形式表示，还是 Unicode 形式表示。输出给用户的时候，所有字符都会转成字面形式。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> f\\u006F\\u006F </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;abc&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">foo </span><span style="color:#6A737D;">// &quot;abc&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> f\\u006F\\u006F </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;abc&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">foo </span><span style="color:#6A737D;">// &quot;abc&quot;</span></span></code></pre></div><p>上面代码中，第一行的变量名<code>foo</code>是 Unicode 形式表示，第二行是字面形式表示。JavaScript 会自动识别。</p><p>我们还需要知道，每个字符在 JavaScript 内部都是以16位（即2个字节）的 UTF-16 格式储存。也就是说，JavaScript 的单位字符长度固定为16位长度，即2个字节。</p><p>但是，UTF-16 有两种长度：对于码点在<code>U+0000</code>到<code>U+FFFF</code>之间的字符，长度为16位（即2个字节）；对于码点在<code>U+10000</code>到<code>U+10FFFF</code>之间的字符，长度为32位（即4个字节），而且前两个字节在<code>0xD800</code>到<code>0xDBFF</code>之间，后两个字节在<code>0xDC00</code>到<code>0xDFFF</code>之间。举例来说，码点<code>U+1D306</code>对应的字符为<code>𝌆，</code>它写成 UTF-16 就是<code>0xD834 0xDF06</code>。</p><p>JavaScript 对 UTF-16 的支持是不完整的，由于历史原因，只支持两字节的字符，不支持四字节的字符。这是因为 JavaScript 第一版发布的时候，Unicode 的码点只编到<code>U+FFFF</code>，因此两字节足够表示了。后来，Unicode 纳入的字符越来越多，出现了四字节的编码。但是，JavaScript 的标准此时已经定型了，统一将字符长度限制在两字节，导致无法识别四字节的字符。上一节的那个四字节字符<code>𝌆</code>，浏览器会正确识别这是一个字符，但是 JavaScript 无法识别，会认为这是两个字符。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&#39;𝌆&#39;</span><span style="color:#E1E4E8;">.</span><span style="color:#79B8FF;">length</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// 2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&#39;𝌆&#39;</span><span style="color:#24292E;">.</span><span style="color:#005CC5;">length</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// 2</span></span></code></pre></div><p>上面代码中，JavaScript 认为<code>𝌆</code>的长度为2，而不是1。</p><p>总结一下，对于码点在<code>U+10000</code>到<code>U+10FFFF</code>之间的字符，JavaScript 总是认为它们是两个字符（<code>length</code>属性为2）。所以处理的时候，必须把这一点考虑在内，也就是说，JavaScript 返回的字符串长度可能是不正确的。</p><h2 id="base64-转码" tabindex="-1">Base64 转码 <a class="header-anchor" href="#base64-转码" aria-label="Permalink to &quot;Base64 转码&quot;">​</a></h2><p>有时，文本里面包含一些不可打印的符号，比如 ASCII 码0到31的符号都无法打印出来，这时可以使用 Base64 编码，将它们转成可以打印的字符。另一个场景是，有时需要以文本格式传递二进制数据，那么也可以使用 Base64 编码。</p><p>所谓 Base64 就是一种编码方法，可以将任意值转成 0～9、A～Z、a-z、<code>+</code>和<code>/</code>这64个字符组成的可打印字符。使用它的主要目的，不是为了加密，而是为了不出现特殊字符，简化程序的处理。</p><p>JavaScript 原生提供两个 Base64 相关的方法。</p><ul><li><code>btoa()</code>：任意值转为 Base64 编码</li><li><code>atob()</code>：Base64 编码转为原来的值</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> string </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;Hello World!&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">btoa</span><span style="color:#E1E4E8;">(string) </span><span style="color:#6A737D;">// &quot;SGVsbG8gV29ybGQh&quot;</span></span>
<span class="line"><span style="color:#B392F0;">atob</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;SGVsbG8gV29ybGQh&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// &quot;Hello World!&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> string </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;Hello World!&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">btoa</span><span style="color:#24292E;">(string) </span><span style="color:#6A737D;">// &quot;SGVsbG8gV29ybGQh&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">atob</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;SGVsbG8gV29ybGQh&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// &quot;Hello World!&quot;</span></span></code></pre></div><p>注意，这两个方法不适合非 ASCII 码的字符，会报错。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">btoa</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;你好&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// 报错</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">btoa</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;你好&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// 报错</span></span></code></pre></div><p>要将非 ASCII 码字符转为 Base64 编码，必须中间插入一个转码环节，再使用这两个方法。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">b64Encode</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">str</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">btoa</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">encodeURIComponent</span><span style="color:#E1E4E8;">(str));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">b64Decode</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">str</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">decodeURIComponent</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">atob</span><span style="color:#E1E4E8;">(str));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">b64Encode</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;你好&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// &quot;JUU0JUJEJUEwJUU1JUE1JUJE&quot;</span></span>
<span class="line"><span style="color:#B392F0;">b64Decode</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;JUU0JUJEJUEwJUU1JUE1JUJE&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// &quot;你好&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">b64Encode</span><span style="color:#24292E;">(</span><span style="color:#E36209;">str</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">btoa</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">encodeURIComponent</span><span style="color:#24292E;">(str));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">b64Decode</span><span style="color:#24292E;">(</span><span style="color:#E36209;">str</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">decodeURIComponent</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">atob</span><span style="color:#24292E;">(str));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">b64Encode</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;你好&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// &quot;JUU0JUJEJUEwJUU1JUE1JUJE&quot;</span></span>
<span class="line"><span style="color:#6F42C1;">b64Decode</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;JUU0JUJEJUEwJUU1JUE1JUJE&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// &quot;你好&quot;</span></span></code></pre></div><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><ul><li>Mathias Bynens, <a href="http://mathiasbynens.be/notes/javascript-encoding" target="_blank" rel="noreferrer">JavaScript’s internal character encoding: UCS-2 or UTF-16?</a></li><li>Mathias Bynens, <a href="http://mathiasbynens.be/notes/javascript-unicode" target="_blank" rel="noreferrer">JavaScript has a Unicode problem</a></li><li>Mozilla Developer Network, <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window.btoa" target="_blank" rel="noreferrer">Window.btoa</a></li></ul>`,80),e=[o];function c(t,r,y,i,E,d){return a(),n("div",null,e)}const h=s(l,[["render",c]]);export{u as __pageData,h as default};
