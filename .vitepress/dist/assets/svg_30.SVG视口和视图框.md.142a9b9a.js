import{_ as l,o as s,c as o,Q as a,k as n}from"./chunks/framework.681fc4ae.js";const L=JSON.parse('{"title":"SVG视口和视图框","description":"","frontmatter":{},"headers":[],"relativePath":"svg/30.SVG视口和视图框.md","filePath":"svg/30.SVG视口和视图框.md"}'),p={name:"svg/30.SVG视口和视图框.md"},t=a(`<h1 id="svg视口和视图框" tabindex="-1">SVG视口和视图框 <a class="header-anchor" href="#svg视口和视图框" aria-label="Permalink to &quot;SVG视口和视图框&quot;">​</a></h1><hr><blockquote></blockquote><ul><li><a href="#视口">视口</a></li><li><a href="#坐标系单位">坐标系单位</a></li><li><a href="#视图框">视图框</a></li><li><a href="#保留宽高比">保留宽高比</a><ul><li><a href="#视图框对齐">视图框对齐</a></li></ul></li></ul><p>SVG图片的视口和视图框设置了图片可见部分的尺寸。</p><h2 id="视口" tabindex="-1">视口 <a class="header-anchor" href="#视口" aria-label="Permalink to &quot;视口&quot;">​</a></h2><p>视口就是SVG图片的可视区域。SVG图像可以逻辑上与你想要的一样宽和高，但同一时间图像的某一部分是可见的。可见区域就被叫作视口。</p><p>你可以通过在<code>&lt;svg&gt;</code>元素上设置<code>width</code>和<code>height</code>属性为其指定视口大小。示例如下：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;500&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;300&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;500&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;300&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">svg</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>这个例子定义了一个宽500单位高300单位的视口。</p><h2 id="坐标系单位" tabindex="-1">坐标系单位 <a class="header-anchor" href="#坐标系单位" aria-label="Permalink to &quot;坐标系单位&quot;">​</a></h2><p>如果你未在<code>width</code>和<code>height</code>属性内指定任何单位，默认单位为像素。也就是说，宽度500表示500像素。</p><p>你也可以使用像素以外的单位。下面是你可以在<code>&lt;svg&gt;</code>元素上使用的单位的列表：</p><table><thead><tr><th>单位</th><th>描述</th></tr></thead><tbody><tr><td>em</td><td>默认字体大小——通常是字符的高度</td></tr><tr><td>ex</td><td>字符<code>x</code>的高度</td></tr><tr><td>px</td><td>像素</td></tr><tr><td>pt</td><td>点（1/72英寸）</td></tr><tr><td>pc</td><td>皮卡（1/6英寸）</td></tr><tr><td>cm</td><td>厘米</td></tr><tr><td>mm</td><td>毫米</td></tr><tr><td>in</td><td>英寸</td></tr></tbody></table><p>你在<code>&lt;svg&gt;</code>元素上设置的单位只会影响其（视口）的大小。SVG图像上显示的SVG形状的大小由你在每个形状上设置的单位确定。如果为指定单位，默认为像素。</p><p>下面这个例子展示了一个具有一组单位的<code>&lt;svg&gt;</code>元素，其中由包含一些具有自己的单位的形状：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;10cm&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;10cm&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">rect</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">x</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">y</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;100&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000; fill: none;&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">rect</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">x</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;100&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">y</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;100&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50mm&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50mm&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000; fill: none;&quot;</span><span style="color:#E1E4E8;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;10cm&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;10cm&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">rect</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">x</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">y</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000; fill: none;&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">rect</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">x</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">y</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50mm&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50mm&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000; fill: none;&quot;</span><span style="color:#24292E;"> /&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">svg</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p><code>&lt;svg&gt;</code>图片有一组单位为<code>cm</code>的属性。两个<code>&lt;rect&gt;</code>元素也有自己的单位集。一个使用像素（没有设置明确单位），另一个使用<code>mm</code>作为<code>width</code>和<code>height</code>属性的单位。</p><p>最终图片如下，请注意，右侧框（<code>width</code>和<code>height</code>单位为<code>mm</code>）比左侧框更大。</p><svg width="10cm" height="10cm"><rect x="50" y="100" width="50" height="50" style="stroke:#000000;fill:none;"></rect><rect x="100" y="100" width="50mm" height="50mm" style="stroke:#000000;fill:none;"></rect></svg><h2 id="视图框" tabindex="-1">视图框 <a class="header-anchor" href="#视图框" aria-label="Permalink to &quot;视图框&quot;">​</a></h2><p>通过使用<code>viewBox</code>属性，你可以在<code>&lt;svg&gt;</code>元素中重新定义没有单位的坐标。示例如下：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;500&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;200&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">viewBox</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;0 0 50 20&quot;</span><span style="color:#E1E4E8;"> &gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">rect</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">x</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;20&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">y</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;10&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;10&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;5&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;500&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;200&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">viewBox</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0 0 50 20&quot;</span><span style="color:#24292E;"> &gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">rect</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">x</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;20&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">y</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;10&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;10&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;5&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">svg</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>此例创建了一个宽度为500像素，高度为200像素的<code>&lt;svg&gt;</code>元素。<code>&lt;svg&gt;</code>的<code>viewBox</code>属性包含四个坐标。这些坐标定义了<code>&lt;svg&gt;</code>元素的视图框。坐标为视图框的<code>x y width height</code>。</p><p>这个例子中，视图框从<code>0,0</code>开始，宽<code>50</code>高<code>20</code>。这意味着，500x200像素的<code>&lt;svg&gt;</code>元素内部使用从<code>0,0</code>到<code>50,20</code>的坐标系。换句话说，<code>&lt;svg&gt;</code>内的图形上的坐标系每一个单位对应于宽度上的500/50=10像素和高度上的200/20=10像素。这就是为什么x位置为20，y位置为10的矩形真正位于<code>200,100</code>，并宽度（10）和高度（5）对应于100像素和50像素。</p><p>另一种解释方式是，<code>viewBox</code>属性的前两个坐标定义了<code>&lt;svg&gt;</code>元素的左上角的用户坐标，后两个坐标定义了右下角的用户坐标。<code>&lt;svg&gt;</code>内的空间被解释为从视图框左上坐标到右下坐标。</p><p>最终图片如下：</p>`,27),e={width:"500",height:"200",viewBox:"0 0 50 20",style:{border:"1px solid #cccccc"}},c=n("rect",{x:"20",y:"10",width:"10",height:"5",style:{stroke:"#000000",fill:"none"}},null,-1),r=[c],E=a(`<p>请注意，<code>&lt;rect&gt;</code>元素内的所有坐标都被解释为一个单位10像素。</p><h2 id="保留宽高比" tabindex="-1">保留宽高比 <a class="header-anchor" href="#保留宽高比" aria-label="Permalink to &quot;保留宽高比&quot;">​</a></h2><p>如果视口和视图框没有相同的纵横比（宽高比），你需要指定SVG查看器（例如浏览器）如何显示SVG图片。可以使用<code>&lt;svg&gt;</code>元素的<code>preserveAspectRatio</code>属性。</p><p><code>preserveAspectRatio</code>属性采用由空格分割的两个值。第一个值告诉视图框如何在视口内对齐。这个值本身由两部分组成，第二个值（如果有的话）指示如何保留宽高比。</p><p>指定对齐的第一个值由两部分组成，第一部分指定x对齐，第二部分指定y对齐。下面是x和y对齐的值列表：</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>xMin</td><td>将视图框的最小x与视口的左边缘对齐。</td></tr><tr><td>xMid</td><td>将视图x轴上的中点与x轴上的视口中心对齐。</td></tr><tr><td>xMax</td><td>将视图框的最大x与视口的右边缘对齐。</td></tr><tr><td>YMin</td><td>将视图框的最小y与视口的顶边对齐。</td></tr><tr><td>YMid</td><td>将视图y轴上的中点与y轴上的视口中心对齐。</td></tr><tr><td>YMax</td><td>将视图框的最大y与视口的底边对齐。</td></tr></tbody></table><p>通过在x部分之后附加y部分，可以将x和y部分组合为单个值，这里有两个例子：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">xMaxYMax</span></span>
<span class="line"><span style="color:#e1e4e8;">xMidYMid</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">xMaxYMax</span></span>
<span class="line"><span style="color:#24292e;">xMidYMid</span></span></code></pre></div><p>这两个例子以不同的方式将视图框与视口对齐。第一个例子将视图框的右边缘与视口的右边缘对齐。第二个例子将视图框的中间对齐视口的中间。</p><p><code>preserveAspectRatio</code>属性值的第二部分可以采用三个不同的值：</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>meet</td><td>保留宽高比，并缩放视图框以适应视口。</td></tr><tr><td>slice</td><td>保留宽高比，并切割掉未适应在视口内的图像的任何部分。</td></tr><tr><td>none</td><td>不保留宽高比。缩放图像以使视图框完全适应视口，比例会被扭曲。</td></tr></tbody></table><p><code>preserveAspectRatio</code>属性值的第二部分附加到第一部分，并且以空格分隔。这里有两个例子：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">preserveAspectRatio=&quot;xMidYMid meet&quot;</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">preserveAspectRatio=&quot;xMinYMin slice&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">preserveAspectRatio=&quot;xMidYMid meet&quot;</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">preserveAspectRatio=&quot;xMinYMin slice&quot;</span></span></code></pre></div><p>我还没真正讨论过<code>preserveAspectRatio</code>各种设置的效果，所以让我们来看一下。</p><p>下面的例子都将<code>width</code>设置为500，<code>height</code>设置为75，<code>viewBox</code>属性设置为<code>0 0 250 75</code>。这意味着，x轴上的每个坐标单位对应于2像素，y轴上的每个坐标单位对应于1像素。如你所见，宽高比沿x轴为500/250=2，沿y轴为75/75=1。这可能导致图像失真，但我们将在下面的例子看到各种<code>preserveAspectRatio</code>设置如何工作的。</p><p>这里的第一个例子中<code>preserveAspectRatio</code>设置为<code>xMinYMin meet</code>。这将保留宽高比，并调整视图框的大小以适应视口。也就是说，根据两个宽高比中较小的一个（比例为1的y轴）缩放视图框。因为<code>xMinYMin</code>部分，视图框将位于视口的左上角。下面是代码和最终图片：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;500&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;75&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">viewBox</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;0 0 250 75&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">preserveAspectRatio</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;xMinYMin meet&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;border: 1px solid #cccccc;&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">rect</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">x</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">y</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;500&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;75&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">viewBox</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0 0 250 75&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">preserveAspectRatio</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;xMinYMin meet&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;border: 1px solid #cccccc;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">rect</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">x</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">y</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">svg</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,17),y={width:"500",height:"75",viewBox:"0 0 250 75",preserveAspectRatio:"xMinYMin meet",style:{border:"1px solid #cccccc"}},i=n("rect",{x:"1",y:"1",width:"50",height:"50",style:{stroke:"#000000",fill:"none"}},null,-1),d=[i],u=a(`<p>第二个例子将<code>preserveAspectRatio</code>设置为<code>xMinYMin slice</code>。将保留宽高比，但是根据宽高比中较大的值（比例为2的x轴）缩放视图，这将导致图片太大以至于无法适应在视口内。图片被称为“切片”。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;500&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;75&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">viewBox</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;0 0 250 75&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">preserveAspectRatio</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;xMinYMin slice&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;border: 1px solid #cccccc;&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">rect</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">x</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">y</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;500&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;75&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">viewBox</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0 0 250 75&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">preserveAspectRatio</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;xMinYMin slice&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;border: 1px solid #cccccc;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">rect</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">x</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">y</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">svg</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,2),F={width:"500",height:"75",viewBox:"0 0 250 75",preserveAspectRatio:"xMinYMin slice",style:{border:"1px solid #cccccc"}},h=n("rect",{x:"1",y:"1",width:"50",height:"50",style:{stroke:"#000000",fill:"none"}},null,-1),q=[h],g=a(`<p>第三个例子中，<code>preserveAspectRatio</code>被设置为<code>none</code>。这意味着视图框将填充整个视口，因为x轴和y轴的宽高比不相同，从而会扭曲图像。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;500&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;75&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">viewBox</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;0 0 250 75&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">preserveAspectRatio</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;none&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;border: 1px solid #cccccc;&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">     &lt;</span><span style="color:#85E89D;">rect</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">x</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">y</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;1&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;50&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;500&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;75&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">viewBox</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0 0 250 75&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">preserveAspectRatio</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;none&quot;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;border: 1px solid #cccccc;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">     &lt;</span><span style="color:#22863A;">rect</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">x</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">y</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;1&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;50&quot;</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">svg</span><span style="color:#24292E;">&gt;</span></span></code></pre></div>`,2),v={width:"500",height:"75",viewBox:"0 0 250 75",preserveAspectRatio:"none",style:{border:"1px solid #cccccc"}},C=n("rect",{x:"1",y:"1",width:"50",height:"50",style:{stroke:"#000000",fill:"none"}},null,-1),x=[C],B=a(`<h3 id="视图框对齐" tabindex="-1">视图框对齐 <a class="header-anchor" href="#视图框对齐" aria-label="Permalink to &quot;视图框对齐&quot;">​</a></h3><p>到目前为止，所有示例都是用了<code>xMinYMin</code>设置。根据你要如何在视口中对齐视图框，你可以使用不同的设置。我将更深入地讲解这些设置如何工作，但让我们先看一个例子：</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;500&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;100&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">viewBox</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;0 0 50 50&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">preserveAspectRatio</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;xMinYMin meet&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;border: 1px solid #cccccc;&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">circle</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;25&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;25&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;500&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">viewBox</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0 0 50 50&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">preserveAspectRatio</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;xMinYMin meet&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;border: 1px solid #cccccc;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">circle</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;25&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;25&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">svg</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>这个例子使用了一个<code>width</code>为500<code>height</code>为100的<code>&lt;svg&gt;</code>元素。<code>viewBox</code>设置为<code>0 0 50 50</code>。最终，x轴上的比例为500/50=10，y轴上的比例为100/50=2。图片上的圆半径为25，使得它宽和高都为50个单位。因此，它填充整个视图框（而不是视口）。</p><p>当使用<code>meet</code>指示符时，视图框将根据y轴缩放，因为它具有较小的比例。这意味着，视图框将沿y轴（垂直）填充整个视口，但沿x轴（水平）仅填充2<em>50像素=100像素（比例</em>视图框X维度）。由于视口宽度为500像素，因此你必须制定如何在视口内水平对齐视图框。可以使用<code>preserveAspectRatio</code>属性值第一部分的<code>xMin</code>、<code>xMid</code>和<code>xMax</code>部分。</p><p>下面三张图片展示了<code>preserveAspectRatio</code>属性值分别为<code>xMinYMin meet</code>，<code>xMidYMin meet</code>和<code>xMaxYMin meet</code>的效果。注意视图框如何根据设置对齐到左侧、中间和右侧。</p>`,6),_={width:"500",height:"100",viewBox:"0 0 50 50",preserveAspectRatio:"xMinYMin meet",style:{border:"1px solid #cccccc"}},m=n("circle",{cx:"25",cy:"25",r:"25",style:{stroke:"#000000",fill:"none"}},null,-1),b=[m],w={width:"500",height:"100",viewBox:"0 0 50 50",preserveAspectRatio:"xMidYMin meet",style:{border:"1px solid #cccccc"}},k=n("circle",{cx:"25",cy:"25",r:"25",style:{stroke:"#000000",fill:"none"}},null,-1),A=[k],M={width:"500",height:"100",viewBox:"0 0 50 50",preserveAspectRatio:"xMaxYMin meet",style:{border:"1px solid #cccccc"}},f=n("circle",{cx:"25",cy:"25",r:"25",style:{stroke:"#000000",fill:"none"}},null,-1),R=[f],Y=a(`<p>同样的，如果图片x轴比例比y轴比例小，你必须指定其y对齐方式。</p><p>下面这个例子和上面的一样，但是现在的<code>width</code>为100，<code>height</code>为200。</p><p>视图框具有相同的尺寸，从而使得y轴的比例（200/50=4）大于x轴比例（100/50=2）。因此视图框将在x轴方向填满视口，而y轴方向不会。这使得必须指定视图框的y对齐方式。</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">width</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;100&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">height</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;200&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">viewBox</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;0 0 50 50&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">preserveAspectRatio</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;xMinYMin meet&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">     </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;border: 1px solid #cccccc;&quot;</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    &lt;</span><span style="color:#85E89D;">circle</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cx</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;25&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">cy</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;25&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">r</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#B392F0;">style</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#E1E4E8;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">svg</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">svg</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">width</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;100&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">height</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;200&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">viewBox</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;0 0 50 50&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">preserveAspectRatio</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;xMinYMin meet&quot;</span></span>
<span class="line"><span style="color:#24292E;">     </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;border: 1px solid #cccccc;&quot;</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    &lt;</span><span style="color:#22863A;">circle</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cx</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;25&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">cy</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;25&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">r</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;25&quot;</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#6F42C1;">style</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;stroke: #000000; fill:none;&quot;</span><span style="color:#24292E;">/&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">svg</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>下面三张图片显示了y对齐分别为<code>YMin</code>，<code>YMid</code>和<code>YMax</code>：</p>`,5),T={width:"100",height:"200",viewBox:"0 0 50 50",preserveAspectRatio:"xMinYMin meet",style:{border:"1px solid #cccccc"}},S=n("circle",{cx:"25",cy:"25",r:"25",style:{stroke:"#000000",fill:"none"}},null,-1),D=[S],V={width:"100",height:"200",viewBox:"0 0 50 50",preserveAspectRatio:"xMinYMid meet",style:{border:"1px solid #cccccc"}},P=n("circle",{cx:"25",cy:"25",r:"25",style:{stroke:"#000000",fill:"none"}},null,-1),G=[P],I={width:"100",height:"200",viewBox:"0 0 50 50",preserveAspectRatio:"xMinYMax meet",style:{border:"1px solid #cccccc"}},N=n("circle",{cx:"25",cy:"25",r:"25",style:{stroke:"#000000",fill:"none"}},null,-1),$=[N];function J(O,Q,X,j,z,H){return s(),o("div",null,[t,(s(),o("svg",e,r)),E,(s(),o("svg",y,d)),u,(s(),o("svg",F,q)),g,(s(),o("svg",v,x)),B,(s(),o("svg",_,b)),(s(),o("svg",w,A)),(s(),o("svg",M,R)),Y,(s(),o("svg",T,D)),(s(),o("svg",V,G)),(s(),o("svg",I,$))])}const U=l(p,[["render",J]]);export{L as __pageData,U as default};
