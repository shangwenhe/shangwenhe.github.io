import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.681fc4ae.js";const h=JSON.parse('{"title":"find","description":"","frontmatter":{},"headers":[],"relativePath":"bash/archives/commands/find.md","filePath":"bash/archives/commands/find.md"}'),p={name:"bash/archives/commands/find.md"},e=l(`<h1 id="find" tabindex="-1">find <a class="header-anchor" href="#find" aria-label="Permalink to &quot;find&quot;">​</a></h1><p><code>find</code>命令用于寻找文件，会包括当前目录的所有下级目录。</p><p>如果不带任何参数，<code>find</code>文件会列出当前目录的所有文件，甚至还包括相对路径。如果把结果导入 sort 效果更好。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">find</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sort</span></span>
<span class="line"><span style="color:#79B8FF;">.</span></span>
<span class="line"><span style="color:#B392F0;">./Makefile</span></span>
<span class="line"><span style="color:#B392F0;">./README</span></span>
<span class="line"><span style="color:#B392F0;">./build</span></span>
<span class="line"><span style="color:#B392F0;">./client.c</span></span>
<span class="line"><span style="color:#B392F0;">./client.h</span></span>
<span class="line"><span style="color:#B392F0;">./common.h</span></span>
<span class="line"><span style="color:#B392F0;">./project.c</span></span>
<span class="line"><span style="color:#B392F0;">./server.c</span></span>
<span class="line"><span style="color:#B392F0;">./server.h</span></span>
<span class="line"><span style="color:#B392F0;">./tests</span></span>
<span class="line"><span style="color:#B392F0;">./tests/suite1.pl</span></span>
<span class="line"><span style="color:#B392F0;">./tests/suite2.pl</span></span>
<span class="line"><span style="color:#B392F0;">./tests/suite3.pl</span></span>
<span class="line"><span style="color:#B392F0;">./tests/suite4.pl</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">find</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sort</span></span>
<span class="line"><span style="color:#005CC5;">.</span></span>
<span class="line"><span style="color:#6F42C1;">./Makefile</span></span>
<span class="line"><span style="color:#6F42C1;">./README</span></span>
<span class="line"><span style="color:#6F42C1;">./build</span></span>
<span class="line"><span style="color:#6F42C1;">./client.c</span></span>
<span class="line"><span style="color:#6F42C1;">./client.h</span></span>
<span class="line"><span style="color:#6F42C1;">./common.h</span></span>
<span class="line"><span style="color:#6F42C1;">./project.c</span></span>
<span class="line"><span style="color:#6F42C1;">./server.c</span></span>
<span class="line"><span style="color:#6F42C1;">./server.h</span></span>
<span class="line"><span style="color:#6F42C1;">./tests</span></span>
<span class="line"><span style="color:#6F42C1;">./tests/suite1.pl</span></span>
<span class="line"><span style="color:#6F42C1;">./tests/suite2.pl</span></span>
<span class="line"><span style="color:#6F42C1;">./tests/suite3.pl</span></span>
<span class="line"><span style="color:#6F42C1;">./tests/suite4.pl</span></span></code></pre></div><p>如果想要 ls -l 样式的列表，只要在 find 后面加上 -ls。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">find</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-ls</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">find</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-ls</span></span></code></pre></div><p>find 有它自己的一套复杂的过滤语句。下面列举的是一些最常用的你可以用以获取某些文件列表的过滤器：</p><ul><li>find -name &#39;*.c&#39; —— 查找符合某 shell 式样式的文件名的文件。用 iname 开启大小写不敏感搜索。</li><li>find -path &#39;<em>test</em>&#39; —— 查找符合某 shell 式样式的路径的文件。用 ipath 开启大小写不敏感搜索。</li><li>find -mtime -5 —— 查找近五天内编辑过的文件。你也可以用 +5 来查找五天之前编辑过的文件。</li><li>find -newer server.c —— 查找比 server.c 更新的文件。</li><li>find -type d —— 查找所有文件夹。如果想找出所有文件，那就用 -type f；找符号连接就用 -type l。</li></ul><p>要注意，上面提到的这些过滤器都是可以组合使用的，例如找出近两天内编辑过的 C 源码：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">find</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;*.c&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-mtime</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-2</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">find</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;*.c&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-mtime</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-2</span></span></code></pre></div><p>默认情况下， find 对搜索结果所采取的动作只是简单地通过标准输出输出一个列表，然而其实还有其他一些有用的后续动作。</p><ul><li>-ls —— 如前文，提供了一种类 ls -l 式的列表。</li><li>-delete —— 删除符合查找条件的文件。</li><li>-exec —— 对搜索结果里的每个文件都运行某个命令， <code>{}</code>会被替换成适当的文件名，并且命令用<code>\\;</code>终结。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">find</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;*.pl&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-exec</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">perl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-c</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{}</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">\\;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">find</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;*.pl&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-exec</span><span style="color:#24292E;"> </span><span style="color:#032F62;">perl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-c</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{}</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">\\;</span></span></code></pre></div><p>你也可以使用<code>+</code>作为终止符来对所有结果运行一次命令。我还发现一个我经常使用的小技巧，就是用 find 生成一个文件列表，然后在 Vim 的垂直分窗中编辑：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">find</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-name</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;*.c&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-exec</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">vim</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">{}</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">+</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">find</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-name</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;*.c&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-exec</span><span style="color:#24292E;"> </span><span style="color:#032F62;">vim</span><span style="color:#24292E;"> </span><span style="color:#032F62;">{}</span><span style="color:#24292E;"> </span><span style="color:#032F62;">+</span></span></code></pre></div>`,15),o=[e];function c(t,r,i,y,d,E){return a(),n("div",null,o)}const C=s(p,[["render",c]]);export{h as __pageData,C as default};
